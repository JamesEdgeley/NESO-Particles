<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="blocked__binary__tree_8hpp" kind="file" language="C++">
    <compoundname>blocked_binary_tree.hpp</compoundname>
    <includes refid="compute__target_8hpp" local="yes">compute_target.hpp</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="neso__particles_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/neso_particles.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>compute_target.hpp</label>
        <link refid="compute__target_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>CL/sycl.hpp</label>
      </node>
      <node id="1">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/blocked_binary_tree.hpp</label>
        <link refid="blocked__binary__tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cstdint</label>
      </node>
      <node id="16">
        <label>numeric</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="17">
        <label>profiling.hpp</label>
        <link refid="profiling_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="8">
        <label>stack</label>
      </node>
      <node id="11">
        <label>communication.hpp</label>
        <link refid="communication_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="12">
        <label>typedefs.hpp</label>
        <link refid="typedefs_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="18">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>mpi.h</label>
      </node>
      <node id="20">
        <label>type_traits</label>
      </node>
      <node id="19">
        <label>set</label>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/blocked_binary_tree.hpp</label>
        <link refid="blocked__binary__tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/tmp/repo-checkout/NESO-Particles/include/neso_particles.hpp</label>
        <link refid="neso__particles_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structNESO_1_1Particles_1_1BlockedBinaryNode" prot="public">NESO::Particles::BlockedBinaryNode</innerclass>
    <innerclass refid="classNESO_1_1Particles_1_1BlockedBinaryTree" prot="public">NESO::Particles::BlockedBinaryTree</innerclass>
    <innernamespace refid="namespaceNESO">NESO</innernamespace>
    <innernamespace refid="namespaceNESO_1_1Particles">NESO::Particles</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_NESO_PARTICLES_INT_KEY_VALUE_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_NESO_PARTICLES_INT_KEY_VALUE_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="compute__target_8hpp" kindref="compound">compute_target.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceNESO_1_1Particles" kindref="compound">NESO::Particles</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>KEY_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VALUE_TYPE,<sp/>INT<sp/>WIDTH&gt;</highlight></codeline>
<codeline lineno="17" refid="structNESO_1_1Particles_1_1BlockedBinaryNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" refkind="member"><highlight class="normal"><sp/><sp/>KEY_TYPE<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>;</highlight></codeline>
<codeline lineno="24" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa29feb565e1ae3308371bd23eb7bc52a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa29feb565e1ae3308371bd23eb7bc52a" kindref="member">lhs</ref>;</highlight></codeline>
<codeline lineno="27" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ab0364680cfa700c2aa3fb07871efba07" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ab0364680cfa700c2aa3fb07871efba07" kindref="member">rhs</ref>;</highlight></codeline>
<codeline lineno="29" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa464b3139668b1548a03725ae350ca98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa464b3139668b1548a03725ae350ca98" kindref="member">exists</ref>[WIDTH];</highlight></codeline>
<codeline lineno="31" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a98ad5127fa8caeba4b5bea8fdb3e1649" refkind="member"><highlight class="normal"><sp/><sp/>VALUE_TYPE<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a98ad5127fa8caeba4b5bea8fdb3e1649" kindref="member">data</ref>[WIDTH];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a8b047356b3c4935543dbb7bcf13036bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a8b047356b3c4935543dbb7bcf13036bd" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lhs<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rhs<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>0;<sp/>ix<sp/>&lt;<sp/>WIDTH;<sp/>ix++)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;exists[ix]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data[ix]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a060cecdc456824367be53c885e29f3f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a060cecdc456824367be53c885e29f3f3" kindref="member">get_node_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNESO_1_1Particles_1a4eac77e3de191a85cc05f4b1700cd605" kindref="member">INT</ref><sp/>cast_key<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespaceNESO_1_1Particles_1a4eac77e3de191a85cc05f4b1700cd605" kindref="member">INT</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(key);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNESO_1_1Particles_1a4eac77e3de191a85cc05f4b1700cd605" kindref="member">INT</ref><sp/>mcast_key<sp/>=<sp/>((-cast_key<sp/>-<sp/>1)<sp/>/<sp/>WIDTH)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-mcast_key;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cast_key<sp/>/<sp/>WIDTH;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a37a016614d55432b8f0e7241c7c631ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a37a016614d55432b8f0e7241c7c631ed" kindref="member">get_leaf_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNESO_1_1Particles_1a4eac77e3de191a85cc05f4b1700cd605" kindref="member">INT</ref><sp/>cast_key<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespaceNESO_1_1Particles_1a4eac77e3de191a85cc05f4b1700cd605" kindref="member">INT</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(key);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cast_key<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WIDTH<sp/>-<sp/>1<sp/>-<sp/>((-cast_key<sp/>-<sp/>1)<sp/>%<sp/>WIDTH);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cast_key<sp/>%<sp/>WIDTH;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a5192e4c6712fe0108e3c9a8d6de1b0a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a5192e4c6712fe0108e3c9a8d6de1b0a2" kindref="member">is_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref><sp/>==<sp/>this-&gt;node_key);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*</highlight></codeline>
<codeline lineno="99" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_key<sp/>&lt;<sp/>this-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa29feb565e1ae3308371bd23eb7bc52a" kindref="member">lhs</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref><sp/>&gt;<sp/>this-&gt;node_key)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ab0364680cfa700c2aa3fb07871efba07" kindref="member">rhs</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae79fdd28139cfc8162b8b0f8d4969ad4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae79fdd28139cfc8162b8b0f8d4969ad4" kindref="member">get_location</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>**leaf_set,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUE_TYPE<sp/>**value)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref><sp/>=<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a060cecdc456824367be53c885e29f3f3" kindref="member">get_node_key</ref>(key);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>leaf_key<sp/>=<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a37a016614d55432b8f0e7241c7c631ed" kindref="member">get_leaf_key</ref>(key);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>node_found<sp/>=<sp/>this-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a5192e4c6712fe0108e3c9a8d6de1b0a2" kindref="member">is_node</ref>(node_key);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((!node_found)<sp/>&amp;&amp;<sp/>(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node_found<sp/>=<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref>-&gt;is_node(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node_found)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref><sp/>=<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref>-&gt;next(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_found)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*leaf_set<sp/>=<sp/>&amp;(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref>-&gt;exists[leaf_key]);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>&amp;(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref>-&gt;data[leaf_key]);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a322f04aa99a08d305290ced43faf9f23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a322f04aa99a08d305290ced43faf9f23" kindref="member">get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>key,<sp/>VALUE_TYPE<sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUE_TYPE<sp/>*value_location;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*leaf_set;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa464b3139668b1548a03725ae350ca98" kindref="member">exists</ref><sp/>=<sp/>this-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae79fdd28139cfc8162b8b0f8d4969ad4" kindref="member">get_location</ref>(key,<sp/>&amp;leaf_set,<sp/>&amp;value_location);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa464b3139668b1548a03725ae350ca98" kindref="member">exists</ref><sp/>&amp;&amp;<sp/>(*leaf_set))<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>*value_location;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1af3916de86d9dbb8cfba92c2b27bc1279" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1af3916de86d9dbb8cfba92c2b27bc1279" kindref="member">set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VALUE_TYPE<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*leaf_set;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUE_TYPE<sp/>*value_location;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa464b3139668b1548a03725ae350ca98" kindref="member">exists</ref><sp/>=<sp/>this-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae79fdd28139cfc8162b8b0f8d4969ad4" kindref="member">get_location</ref>(key,<sp/>&amp;leaf_set,<sp/>&amp;value_location);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa464b3139668b1548a03725ae350ca98" kindref="member">exists</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*value_location<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*leaf_set<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a9c9088935ae4a74d30361a160296073d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a9c9088935ae4a74d30361a160296073d" kindref="member">add_node</ref>(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*node)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref><sp/>=<sp/>node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*current_node<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*next_node<sp/>=</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref>(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>travel<sp/>down<sp/>the<sp/>tree<sp/>until<sp/>we<sp/>find<sp/>a<sp/>branch<sp/>not<sp/>populated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(next_node<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_node<sp/>=<sp/>next_node;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_node<sp/>=<sp/>current_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a2ccdf37e0bb3d0963459b5151b68c5e5" kindref="member">next</ref>(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>new<sp/>node<sp/>to<sp/>current_node<sp/>either<sp/>lhs<sp/>or<sp/>rhs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_key<sp/>&lt;<sp/>current_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa29feb565e1ae3308371bd23eb7bc52a" kindref="member">lhs</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ab0364680cfa700c2aa3fb07871efba07" kindref="member">rhs</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>KEY_TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VALUE_TYPE,<sp/>INT<sp/>WIDTH&gt;</highlight></codeline>
<codeline lineno="221" refid="classNESO_1_1Particles_1_1BlockedBinaryTree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree" kindref="compound">BlockedBinaryTree</ref><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223" refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1aa973a438ebbd88d98ad26bc3b2f15ff6" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;KEY_TYPE,<sp/>BlockedBinaryNode&lt;KEY_TYPE,<sp/>VALUE_TYPE,<sp/>WIDTH&gt;<sp/>*&gt;<sp/><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1aa973a438ebbd88d98ad26bc3b2f15ff6" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227" refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a87b3511d969ee58d4cbb9c91cc57826b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a87b3511d969ee58d4cbb9c91cc57826b" kindref="member">sycl_target</ref>;</highlight></codeline>
<codeline lineno="229" refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1ab2b9c691a44477cc500a5f6df70b3439" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*<ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1ab2b9c691a44477cc500a5f6df70b3439" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a83fa95f40817aa7888477d338953bee8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a83fa95f40817aa7888477d338953bee8" kindref="member">~BlockedBinaryTree</ref>()<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;nx<sp/>:<sp/>this-&gt;nodes)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;free(nx.second);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a021852201bef92fbc8d465dfff2ace91" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a021852201bef92fbc8d465dfff2ace91" kindref="member">BlockedBinaryTree</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a87b3511d969ee58d4cbb9c91cc57826b" kindref="member">sycl_target</ref>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a87b3511d969ee58d4cbb9c91cc57826b" kindref="member">sycl_target</ref>(<ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a87b3511d969ee58d4cbb9c91cc57826b" kindref="member">sycl_target</ref>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_trivially_copyable_v&lt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref>&gt;<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BlockedBinaryNode<sp/>is<sp/>not<sp/>trivially<sp/>copyable<sp/>to<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_integral&lt;KEY_TYPE&gt;::value,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;KEY_TYPE<sp/>is<sp/>not<sp/>an<sp/>integral<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;root<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1acfd6549f07e80c346ba510b2f76ce3f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1acfd6549f07e80c346ba510b2f76ce3f4" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VALUE_TYPE<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>node_key<sp/>=</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a060cecdc456824367be53c885e29f3f3" kindref="member">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;::get_node_key</ref>(key);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>leaf_key<sp/>=</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a37a016614d55432b8f0e7241c7c631ed" kindref="member">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;::get_leaf_key</ref>(key);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>node_exists<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;nodes.count(node_key));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>allocate<sp/>a<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node_exists)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*new_node<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_node<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;malloc_device(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode" kindref="compound">BlockedBinaryNode&lt;KEY_TYPE, VALUE_TYPE, WIDTH&gt;</ref>)));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nodes[node_key]<sp/>=<sp/>new_node;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add_to_tree<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_to_tree<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;root<sp/>=<sp/>new_node;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k_root<sp/>=<sp/>this-&gt;<ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1ab2b9c691a44477cc500a5f6df70b3439" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;queue</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.submit([&amp;](sycl::handler<sp/>&amp;cgh)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgh.single_task&lt;&gt;([=]()<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a8b047356b3c4935543dbb7bcf13036bd" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1ae05008d128c2d7e06d4ddcbccf41af46" kindref="member">node_key</ref><sp/>=<sp/>node_key;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1aa464b3139668b1548a03725ae350ca98" kindref="member">exists</ref>[leaf_key]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structNESO_1_1Particles_1_1BlockedBinaryNode_1a98ad5127fa8caeba4b5bea8fdb3e1649" kindref="member">data</ref>[leaf_key]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(add_to_tree)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_root-&gt;add_node(new_node);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait_and_throw();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k_root<sp/>=<sp/>this-&gt;<ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1ab2b9c691a44477cc500a5f6df70b3439" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;queue</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.submit([&amp;](sycl::handler<sp/>&amp;cgh)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgh.single_task&lt;&gt;([=]()<sp/>{<sp/>k_root-&gt;set(key,<sp/>value);<sp/>});</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait_and_throw();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a3cfceb476f878d0065b5dbb17e8c8d81" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1a3cfceb476f878d0065b5dbb17e8c8d81" kindref="member">host_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KEY_TYPE<sp/>key,<sp/>VALUE_TYPE<sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost" kindref="compound">BufferDeviceHost&lt;VALUE_TYPE&gt;</ref><sp/>output(this-&gt;sycl_target,<sp/>1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost" kindref="compound">BufferDeviceHost&lt;bool&gt;</ref><sp/>exists(this-&gt;sycl_target,<sp/>1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k_output<sp/>=<sp/>output.<ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a1ff186642e20b8eab83618f270d2399f" kindref="member">d_buffer</ref>.ptr;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k_exists<sp/>=<sp/>exists.<ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a1ff186642e20b8eab83618f270d2399f" kindref="member">d_buffer</ref>.ptr;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>k_root<sp/>=<sp/>this-&gt;<ref refid="classNESO_1_1Particles_1_1BlockedBinaryTree_1ab2b9c691a44477cc500a5f6df70b3439" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;queue</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.submit([&amp;](sycl::handler<sp/>&amp;cgh)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgh.single_task&lt;&gt;(</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]()<sp/>{<sp/>k_exists[0]<sp/>=<sp/>k_root-&gt;get(key,<sp/>k_output);<sp/>});</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait_and_throw();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>output.<ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a83c4d8b9ad98ba60aaab700a40750653" kindref="member">device_to_host</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>exists.<ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a83c4d8b9ad98ba60aaab700a40750653" kindref="member">device_to_host</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>output.<ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a83aa01895446461fd429ccbbb3284f04" kindref="member">h_buffer</ref>.ptr[0];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exists.<ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a83aa01895446461fd429ccbbb3284f04" kindref="member">h_buffer</ref>.ptr[0];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal">};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>NESO::Particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/tmp/repo-checkout/NESO-Particles/include/containers/blocked_binary_tree.hpp"/>
  </compounddef>
</doxygen>
