<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classNESO_1_1Particles_1_1GlobalArray" kind="class" language="C++" prot="public">
    <compoundname>NESO::Particles::GlobalArray</compoundname>
    <includes refid="global__array_8hpp" local="no">global_array.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classNESO_1_1Particles_1_1GlobalArray_1a5781ba095359438118ce96e2e0eb4a8d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KERNEL</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ARGS</declname>
            <defname>ARGS</defname>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class ParticleLoop</definition>
        <argsstring></argsstring>
        <name>ParticleLoop</name>
        <param>
          <type><ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="145" column="17" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classNESO_1_1Particles_1_1GlobalArray_1a982598d16b43b8e6bf8338c836df8036" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleLoopImplementation::post_loop</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info, Access::Add&lt; GlobalArray&lt; T &gt; * &gt; &amp;arg)</argsstring>
        <name>ParticleLoopImplementation::post_loop</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1Access_1_1Add" kindref="compound">Access::Add</ref>&lt; <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref>&lt; T &gt; * &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="146" column="10"/>
      </memberdef>
      <memberdef kind="friend" id="classNESO_1_1Particles_1_1GlobalArray_1a72537398d6a5a2426495226f3a469af1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceNESO_1_1Particles_1a9f23675b1b14a8be48d5b433693195ed" kindref="member">GlobalArrayImplGetConstT</ref>&lt; T &gt;</type>
        <definition>GlobalArrayImplGetConstT&lt;T&gt; ParticleLoopImplementation::create_loop_arg</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info, sycl::handler &amp;cgh, Access::Read&lt; GlobalArray&lt; T &gt; * &gt; &amp;a)</argsstring>
        <name>ParticleLoopImplementation::create_loop_arg</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <param>
          <type>sycl::handler &amp;</type>
          <declname>cgh</declname>
        </param>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1Access_1_1Read" kindref="compound">Access::Read</ref>&lt; <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref>&lt; T &gt; * &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="149" column="3"/>
      </memberdef>
      <memberdef kind="friend" id="classNESO_1_1Particles_1_1GlobalArray_1a2efc2178ee99f37cc56ae4bed4e3c589" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceNESO_1_1Particles_1a35560e9559a0a254e218ba54c08c3204" kindref="member">GlobalArrayImplGetT</ref>&lt; T &gt;</type>
        <definition>GlobalArrayImplGetT&lt;T&gt; ParticleLoopImplementation::create_loop_arg</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info, sycl::handler &amp;cgh, Access::Add&lt; GlobalArray&lt; T &gt; * &gt; &amp;a)</argsstring>
        <name>ParticleLoopImplementation::create_loop_arg</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <param>
          <type>sycl::handler &amp;</type>
          <declname>cgh</declname>
        </param>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1Access_1_1Add" kindref="compound">Access::Add</ref>&lt; <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref>&lt; T &gt; * &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="153" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1GlobalArray_1a942dbfb46048dfd59dfc703381480bb5" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classNESO_1_1Particles_1_1BufferDeviceHost" kindref="compound">BufferDeviceHost</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;BufferDeviceHost&lt;T&gt; &gt; NESO::Particles::GlobalArray&lt; T &gt;::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="158" column="19" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1GlobalArray_1a5f2abb61148f954db487139de0a1bee9" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref></type>
        <definition>SYCLTargetSharedPtr NESO::Particles::GlobalArray&lt; T &gt;::sycl_target</definition>
        <argsstring></argsstring>
        <name>sycl_target</name>
        <briefdescription>
<para>The <ref refid="classNESO_1_1Particles_1_1SYCLTarget" kindref="compound">SYCLTarget</ref> the <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref> is created on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="196" column="23" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1GlobalArray_1a76607b1f2eb52e9be3867f5a64b327f4" prot="public" static="no" mutable="no">
        <type>MPI_Comm</type>
        <definition>MPI_Comm NESO::Particles::GlobalArray&lt; T &gt;::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <briefdescription>
<para>The MPI communicator reductions are made over. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="198" column="12" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1GlobalArray_1a28dd1232d8d752d594f536b0518f49b4" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t NESO::Particles::GlobalArray&lt; T &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= {0}</initializer>
        <briefdescription>
<para>The number of elements in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="200" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1abd76cb0b86106decf33cea06b9194787" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNESO_1_1Particles_1a35560e9559a0a254e218ba54c08c3204" kindref="member">GlobalArrayImplGetT</ref>&lt; T &gt;</type>
        <definition>GlobalArrayImplGetT&lt;T&gt; NESO::Particles::GlobalArray&lt; T &gt;::impl_get</definition>
        <argsstring>()</argsstring>
        <name>impl_get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Non-const pointer to underlying device data. Intended for friend access from <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="164" column="30" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1af7f1e82f3e466992df4c738e7ff0d49e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNESO_1_1Particles_1a9f23675b1b14a8be48d5b433693195ed" kindref="member">GlobalArrayImplGetConstT</ref>&lt; T &gt;</type>
        <definition>GlobalArrayImplGetConstT&lt;T&gt; NESO::Particles::GlobalArray&lt; T &gt;::impl_get_const</definition>
        <argsstring>()</argsstring>
        <name>impl_get_const</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Const pointer to underlying device data. Intended for friend access from <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="172" column="35" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1a03a9002893c67906683ba8a633cabc9e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NESO::Particles::GlobalArray&lt; T &gt;::impl_post_loop_add</definition>
        <argsstring>()</argsstring>
        <name>impl_post_loop_add</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Post kernel execution reduction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="179" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="179" bodyend="192"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1a6ef98a8908c8a2ef04c9b4d37dd84678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::GlobalArray&lt; T &gt;::GlobalArray</definition>
        <argsstring>()=default</argsstring>
        <name>GlobalArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="202" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1aa3b107b0636ae8b60cb92c75ef5392c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref>&lt; T &gt; &amp;</type>
        <definition>GlobalArray&lt;T&gt;&amp; NESO::Particles::GlobalArray&lt; T &gt;::operator=</definition>
        <argsstring>(const GlobalArray&lt; T &gt; &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref>&lt; T &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Note that the copy operator creates shallow copies of the array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="207" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1ad16425240751e9aad892dd44248e13f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::GlobalArray&lt; T &gt;::GlobalArray</definition>
        <argsstring>(SYCLTargetSharedPtr sycl_target, const std::size_t size, const std::optional&lt; T &gt; init_value=std::nullopt)</argsstring>
        <name>GlobalArray</name>
        <param>
          <type><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref></type>
          <declname>sycl_target</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::optional&lt; T &gt;</type>
          <declname>init_value</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref> on a compute target and given size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sycl_target</parametername>
</parameternamelist>
<parameterdescription>
<para>Device to create <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref> on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Default</parametername>
</parameternamelist>
<parameterdescription>
<para>value to initialise values to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="216" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="216" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1a3366dfa06ef571ed849ca99bd2389a81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NESO::Particles::GlobalArray&lt; T &gt;::fill</definition>
        <argsstring>(const T value)</argsstring>
        <name>fill</name>
        <param>
          <type>const T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill the array with a value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to fill the array with - not reduced across MPI ranks. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="232" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="232" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1aa9523437fb44f417dc9d0450af837dd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>sycl::event</type>
        <definition>sycl::event NESO::Particles::GlobalArray&lt; T &gt;::get_async</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;data)</argsstring>
        <name>get_async</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Asynchronously get the values in the local array into a std::vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector to copy values from <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref> into. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Event to wait on before using new values in the std::vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="251" column="22" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="251" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1ae6be8c667cd232c28d1734ef4258562f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NESO::Particles::GlobalArray&lt; T &gt;::get</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;data)</argsstring>
        <name>get</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the values in the local array into a std::vector. Blocks until copy is complete.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector to copy values from <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref> into. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="269" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1GlobalArray_1ac2cd0f907b28104bc7a3ba9d1df4a2b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; NESO::Particles::GlobalArray&lt; T &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the values in the local array into a std::vector.</para>
<para><simplesect kind="return"><para>std::vector of values in the <ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="278" column="22" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="278" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classNESO_1_1Particles_1_1GlobalArray" kindref="compound">GlobalArray</ref> is an array type which can be accessed from kernels in read or atomic add mode. Post loop execution, with add access mode, the global array values are automatically reduced across the MPI communicator. </para>
    </detaileddescription>
    <location file="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" line="143" column="12" bodyfile="/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp" bodystart="143" bodyend="283"/>
    <listofallmembers>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a942dbfb46048dfd59dfc703381480bb5" prot="protected" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>buffer</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a76607b1f2eb52e9be3867f5a64b327f4" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>comm</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a3366dfa06ef571ed849ca99bd2389a81" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>fill</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1ae6be8c667cd232c28d1734ef4258562f" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>get</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1ac2cd0f907b28104bc7a3ba9d1df4a2b1" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>get</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1aa9523437fb44f417dc9d0450af837dd3" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>get_async</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a6ef98a8908c8a2ef04c9b4d37dd84678" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>GlobalArray</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1ad16425240751e9aad892dd44248e13f7" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>GlobalArray</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1abd76cb0b86106decf33cea06b9194787" prot="protected" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>impl_get</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1af7f1e82f3e466992df4c738e7ff0d49e" prot="protected" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>impl_get_const</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a03a9002893c67906683ba8a633cabc9e" prot="protected" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>impl_post_loop_add</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1aa3b107b0636ae8b60cb92c75ef5392c2" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>operator=</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a5781ba095359438118ce96e2e0eb4a8d" prot="private" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>ParticleLoop</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a72537398d6a5a2426495226f3a469af1" prot="private" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>ParticleLoopImplementation::create_loop_arg</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a2efc2178ee99f37cc56ae4bed4e3c589" prot="private" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>ParticleLoopImplementation::create_loop_arg</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a982598d16b43b8e6bf8338c836df8036" prot="private" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>ParticleLoopImplementation::post_loop</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a28dd1232d8d752d594f536b0518f49b4" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>size</name></member>
      <member refid="classNESO_1_1Particles_1_1GlobalArray_1a5f2abb61148f954db487139de0a1bee9" prot="public" virt="non-virtual"><scope>NESO::Particles::GlobalArray</scope><name>sycl_target</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
