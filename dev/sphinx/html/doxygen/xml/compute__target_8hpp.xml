<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="compute__target_8hpp" kind="file" language="C++">
    <compoundname>compute_target.hpp</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">CL/sycl.hpp</includes>
    <includes local="no">array</includes>
    <includes local="no">map</includes>
    <includes local="no">mpi.h</includes>
    <includes local="no">stack</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="communication_8hpp" local="yes">communication.hpp</includes>
    <includes refid="profiling_8hpp" local="yes">profiling.hpp</includes>
    <includes refid="typedefs_8hpp" local="yes">typedefs.hpp</includes>
    <includedby refid="cell__dat__compression_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/cell_dat_compression.hpp</includedby>
    <includedby refid="cell__dat__move_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/cell_dat_move.hpp</includedby>
    <includedby refid="cartesian__mesh_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/cartesian_mesh.hpp</includedby>
    <includedby refid="blocked__binary__tree_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/containers/blocked_binary_tree.hpp</includedby>
    <includedby refid="cell__data_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/containers/cell_data.hpp</includedby>
    <includedby refid="descendant__products_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/containers/descendant_products.hpp</includedby>
    <includedby refid="local__array_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/containers/local_array.hpp</includedby>
    <includedby refid="global__array_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp</includedby>
    <includedby refid="product__matrix_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/containers/product_matrix.hpp</includedby>
    <includedby refid="sym__vector_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/containers/sym_vector.hpp</includedby>
    <includedby refid="departing__particle__identification_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/departing_particle_identification.hpp</includedby>
    <includedby refid="domain_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/domain.hpp</includedby>
    <includedby refid="error__propagate_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/error_propagate.hpp</includedby>
    <includedby refid="global__move_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/global_move.hpp</includedby>
    <includedby refid="global__move__exchange_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/global_move_exchange.hpp</includedby>
    <includedby refid="local__mapping_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/local_mapping.hpp</includedby>
    <includedby refid="local__move_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/local_move.hpp</includedby>
    <includedby refid="particle__loop__base_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop_base.hpp</includedby>
    <includedby refid="mesh__hierarchy_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/mesh_hierarchy.hpp</includedby>
    <includedby refid="particle__loop_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp</includedby>
    <includedby refid="packing__unpacking_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/packing_unpacking.hpp</includedby>
    <includedby refid="particle__dat_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/particle_dat.hpp</includedby>
    <includedby refid="particle__group_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/particle_group.hpp</includedby>
    <includedby refid="particle__remover_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/particle_remover.hpp</includedby>
    <includedby refid="neso__particles_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/neso_particles.hpp</includedby>
    <includedby refid="particle__set_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/particle_set.hpp</includedby>
    <includedby refid="particle__sub__group_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/particle_sub_group.hpp</includedby>
    <includedby refid="utility_8hpp" local="yes">/tmp/repo-checkout/NESO-Particles/include/utility.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp</label>
        <link refid="compute__target_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>CL/sycl.hpp</label>
      </node>
      <node id="13">
        <label>cstdint</label>
      </node>
      <node id="15">
        <label>numeric</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="16">
        <label>profiling.hpp</label>
        <link refid="profiling_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="7">
        <label>stack</label>
      </node>
      <node id="10">
        <label>communication.hpp</label>
        <link refid="communication_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>array</label>
      </node>
      <node id="11">
        <label>typedefs.hpp</label>
        <link refid="typedefs_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="17">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>mpi.h</label>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14">
        <label>/tmp/repo-checkout/NESO-Particles/include/parallel_initialisation.hpp</label>
        <link refid="parallel__initialisation_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/tmp/repo-checkout/NESO-Particles/include/mesh_interface_local_decomp.hpp</label>
        <link refid="mesh__interface__local__decomp_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/product_matrix.hpp</label>
        <link refid="product__matrix_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/descendant_products.hpp</label>
        <link refid="descendant__products_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/tmp/repo-checkout/NESO-Particles/include/global_move.hpp</label>
        <link refid="global__move_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp</label>
        <link refid="particle__loop_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp</label>
        <link refid="compute__target_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/global_array.hpp</label>
        <link refid="global__array_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/blocked_binary_tree.hpp</label>
        <link refid="blocked__binary__tree_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/tmp/repo-checkout/NESO-Particles/include/cartesian_mesh.hpp</label>
        <link refid="cartesian__mesh_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/tmp/repo-checkout/NESO-Particles/include/local_mapping.hpp</label>
        <link refid="local__mapping_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/tmp/repo-checkout/NESO-Particles/include/cell_dat_move.hpp</label>
        <link refid="cell__dat__move_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/tmp/repo-checkout/NESO-Particles/include/departing_particle_identification_impl.hpp</label>
        <link refid="departing__particle__identification__impl_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/tmp/repo-checkout/NESO-Particles/include/global_move_exchange.hpp</label>
        <link refid="global__move__exchange_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/tmp/repo-checkout/NESO-Particles/include/boundary_conditions.hpp</label>
        <link refid="boundary__conditions_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/tmp/repo-checkout/NESO-Particles/include/neso_particles.hpp</label>
        <link refid="neso__particles_8hpp"/>
      </node>
      <node id="8">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/sym_vector.hpp</label>
        <link refid="sym__vector_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>/tmp/repo-checkout/NESO-Particles/include/packing_unpacking.hpp</label>
        <link refid="packing__unpacking_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/tmp/repo-checkout/NESO-Particles/include/global_mapping_impl.hpp</label>
        <link refid="global__mapping__impl_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/tmp/repo-checkout/NESO-Particles/include/cell_dat_compression.hpp</label>
        <link refid="cell__dat__compression_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/tmp/repo-checkout/NESO-Particles/include/particle_group.hpp</label>
        <link refid="particle__group_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/tmp/repo-checkout/NESO-Particles/include/utility_mesh_hierarchy_plotting.hpp</label>
        <link refid="utility__mesh__hierarchy__plotting_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/tmp/repo-checkout/NESO-Particles/include/utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/tmp/repo-checkout/NESO-Particles/include/particle_dat.hpp</label>
        <link refid="particle__dat_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/local_array.hpp</label>
        <link refid="local__array_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>/tmp/repo-checkout/NESO-Particles/include/mesh_hierarchy.hpp</label>
        <link refid="mesh__hierarchy_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/tmp/repo-checkout/NESO-Particles/include/particle_set.hpp</label>
        <link refid="particle__set_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/tmp/repo-checkout/NESO-Particles/include/cell_dat_move_impl.hpp</label>
        <link refid="cell__dat__move__impl_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/cell_dat_const.hpp</label>
        <link refid="cell__dat__const_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop_index.hpp</label>
        <link refid="particle__loop__index_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/tmp/repo-checkout/NESO-Particles/include/departing_particle_identification.hpp</label>
        <link refid="departing__particle__identification_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/tmp/repo-checkout/NESO-Particles/include/cell_dat.hpp</label>
        <link refid="cell__dat_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/tmp/repo-checkout/NESO-Particles/include/loop/pli_particle_dat.hpp</label>
        <link refid="pli__particle__dat_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/tmp/repo-checkout/NESO-Particles/include/cell_binning.hpp</label>
        <link refid="cell__binning_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/tmp/repo-checkout/NESO-Particles/include/particle_remover.hpp</label>
        <link refid="particle__remover_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/tmp/repo-checkout/NESO-Particles/include/particle_group_impl.hpp</label>
        <link refid="particle__group__impl_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/cell_data.hpp</label>
        <link refid="cell__data_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/tmp/repo-checkout/NESO-Particles/include/local_move.hpp</label>
        <link refid="local__move_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/tmp/repo-checkout/NESO-Particles/include/particle_sub_group.hpp</label>
        <link refid="particle__sub__group_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/tmp/repo-checkout/NESO-Particles/include/containers/cell_dat.hpp</label>
        <link refid="containers_2cell__dat_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/tmp/repo-checkout/NESO-Particles/include/global_mapping.hpp</label>
        <link refid="global__mapping_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/tmp/repo-checkout/NESO-Particles/include/error_propagate.hpp</label>
        <link refid="error__propagate_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/tmp/repo-checkout/NESO-Particles/include/particle_io.hpp</label>
        <link refid="particle__io_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop_base.hpp</label>
        <link refid="particle__loop__base_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/tmp/repo-checkout/NESO-Particles/include/mesh_interface.hpp</label>
        <link refid="mesh__interface_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/tmp/repo-checkout/NESO-Particles/include/domain.hpp</label>
        <link refid="domain_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classNESO_1_1Particles_1_1SYCLTarget" prot="public">NESO::Particles::SYCLTarget</innerclass>
    <innerclass refid="classNESO_1_1Particles_1_1BufferBase" prot="public">NESO::Particles::BufferBase</innerclass>
    <innerclass refid="classNESO_1_1Particles_1_1BufferDevice" prot="public">NESO::Particles::BufferDevice</innerclass>
    <innerclass refid="classNESO_1_1Particles_1_1BufferShared" prot="public">NESO::Particles::BufferShared</innerclass>
    <innerclass refid="classNESO_1_1Particles_1_1BufferHost" prot="public">NESO::Particles::BufferHost</innerclass>
    <innerclass refid="classNESO_1_1Particles_1_1BufferDeviceHost" prot="public">NESO::Particles::BufferDeviceHost</innerclass>
    <innerclass refid="classNESO_1_1Particles_1_1EventStack" prot="public">NESO::Particles::EventStack</innerclass>
    <innerclass refid="structNESO_1_1Particles_1_1NDRangePeel1D" prot="public">NESO::Particles::NDRangePeel1D</innerclass>
    <innernamespace refid="namespaceNESO">NESO</innernamespace>
    <innernamespace refid="namespaceNESO_1_1Particles">NESO::Particles</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_NESO_PARTICLES_COMPUTE_TARGET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_NESO_PARTICLES_COMPUTE_TARGET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/sycl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mpi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="communication_8hpp" kindref="compound">communication.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="profiling_8hpp" kindref="compound">profiling.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="typedefs_8hpp" kindref="compound">typedefs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cl;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceNESO_1_1Particles" kindref="compound">NESO::Particles</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespaceNESO_1_1Particles_1a1ded7f6b696ceae64f0e386a19fc9e85" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceNESO_1_1Particles_1a1ded7f6b696ceae64f0e386a19fc9e85" kindref="member">get_local_mpi_rank</ref>(MPI_Comm<sp/>comm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_rank<sp/>=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*env_char<sp/>=<sp/>std::getenv(</highlight><highlight class="stringliteral">&quot;OMPI_COMM_WORLD_LOCAL_RANK&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>env_str<sp/>=<sp/>std::string(env_char);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>env_int<sp/>=<sp/>std::stoi(env_str);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>env_int;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*env_char<sp/>=<sp/>std::getenv(</highlight><highlight class="stringliteral">&quot;MV2_COMM_WORLD_LOCAL_RANK&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>env_str<sp/>=<sp/>std::string(env_char);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>env_int<sp/>=<sp/>std::stoi(env_str);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>env_int;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*env_char<sp/>=<sp/>std::getenv(</highlight><highlight class="stringliteral">&quot;MPI_LOCALRANKID&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>env_str<sp/>=<sp/>std::string(env_char);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>env_int<sp/>=<sp/>std::stoi(env_str);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>env_int;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(default_rank<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNESO_1_1Particles_1_1CommPair" kindref="compound">CommPair</ref><sp/>comm_pair(comm);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>default_rank<sp/>=<sp/>comm_pair.<ref refid="classNESO_1_1Particles_1_1CommPair_1ad05280f3448bbfe566c4e5136b2f3ea4" kindref="member">rank_intra</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>comm_pair.<ref refid="classNESO_1_1Particles_1_1CommPair_1a78b3ae9c7dfb105c37198df8e27f56c8" kindref="member">free</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_rank;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classNESO_1_1Particles_1_1SYCLTarget" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNESO_1_1Particles_1_1SYCLTarget" kindref="compound">SYCLTarget</ref><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>std::map&lt;unsigned<sp/>char<sp/>*,<sp/>size_t&gt;<sp/>ptr_map;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_OOB_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>std::array&lt;unsigned<sp/>char,<sp/>DEBUG_OOB_WIDTH&gt;<sp/>ptr_bit_mask;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>std::array&lt;unsigned<sp/>char,<sp/>DEBUG_OOB_WIDTH&gt;<sp/>ptr_bit_tmp;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68" refid="classNESO_1_1Particles_1_1SYCLTarget_1a0dff55210b17655aea30b6da975db5a7" refkind="member"><highlight class="normal"><sp/><sp/>sycl::device<sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a0dff55210b17655aea30b6da975db5a7" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="70" refid="classNESO_1_1Particles_1_1SYCLTarget_1a95689246305f03b63e80867736f29726" refkind="member"><highlight class="normal"><sp/><sp/>sycl::queue<sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a95689246305f03b63e80867736f29726" kindref="member">queue</ref>;</highlight></codeline>
<codeline lineno="72" refid="classNESO_1_1Particles_1_1SYCLTarget_1abb607ca8492a7a29082d7d4c23ffefb1" refkind="member"><highlight class="normal"><sp/><sp/>MPI_Comm<sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1abb607ca8492a7a29082d7d4c23ffefb1" kindref="member">comm</ref>;</highlight></codeline>
<codeline lineno="75" refid="classNESO_1_1Particles_1_1SYCLTarget_1a7317afc757d61abac977af2875d1435f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1CommPair" kindref="compound">CommPair</ref><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a7317afc757d61abac977af2875d1435f" kindref="member">comm_pair</ref>;</highlight></codeline>
<codeline lineno="77" refid="classNESO_1_1Particles_1_1SYCLTarget_1aa76c7f29750a02899daf9d9bed0ee41a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1ProfileMap" kindref="compound">ProfileMap</ref><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1aa76c7f29750a02899daf9d9bed0ee41a" kindref="member">profile_map</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classNESO_1_1Particles_1_1SYCLTarget_1a1d679853013a4b67a0883378add51dc0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a1d679853013a4b67a0883378add51dc0" kindref="member">SYCLTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget" kindref="compound">SYCLTarget</ref><sp/>&amp;st)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82" refid="classNESO_1_1Particles_1_1SYCLTarget_1ad10647c1238a0f016aaa262aaff500dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget" kindref="compound">SYCLTarget</ref><sp/>&amp;<ref refid="classNESO_1_1Particles_1_1SYCLTarget_1ad10647c1238a0f016aaa262aaff500dd" kindref="member">operator=</ref>(<ref refid="classNESO_1_1Particles_1_1SYCLTarget" kindref="compound">SYCLTarget</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classNESO_1_1Particles_1_1SYCLTarget_1a924afce0bb239991413771fd2254013c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a924afce0bb239991413771fd2254013c" kindref="member">SYCLTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpu_device,<sp/>MPI_Comm<sp/>comm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_rank<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comm_pair(comm)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpu_device<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;device<sp/>=<sp/>sycl::device{sycl::gpu_selector()};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(sycl::exception<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>select<sp/>a<sp/>GPU\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>a<sp/>CPU<sp/>device\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;device<sp/>=<sp/>sycl::device{sycl::cpu_selector()};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpu_device<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;device<sp/>=<sp/>sycl::device{sycl::cpu_selector()};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>default<sp/>device<sp/>and<sp/>platform<sp/>as<sp/>they<sp/>are<sp/>most<sp/>likely<sp/>to<sp/>be<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>desired<sp/>device<sp/>based<sp/>on<sp/>SYCL<sp/>implementation/runtime/environment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::device<sp/>default_device{sycl::default_selector()};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>default_platform<sp/>=<sp/>default_device.get_platform();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>all<sp/>devices<sp/>from<sp/>the<sp/>default<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>devices<sp/>=<sp/>default_platform.get_devices();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>local<sp/>rank<sp/>to<sp/>use<sp/>for<sp/>round<sp/>robin<sp/>device<sp/>assignment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(local_rank<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_rank<sp/>=<sp/><ref refid="namespaceNESO_1_1Particles_1a1ded7f6b696ceae64f0e386a19fc9e85" kindref="member">get_local_mpi_rank</ref>(comm,<sp/>this-&gt;comm_pair.<ref refid="classNESO_1_1Particles_1_1CommPair_1ad05280f3448bbfe566c4e5136b2f3ea4" kindref="member">rank_intra</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>round<sp/>robin<sp/>assign<sp/>devices<sp/>to<sp/>local<sp/>MPI<sp/>ranks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_devices<sp/>=<sp/>devices.size();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>local_rank<sp/>%<sp/>num_devices;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;device<sp/>=<sp/>devices[device_index];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;profile_map.<ref refid="classNESO_1_1Particles_1_1ProfileMap_1addffa4b53d0ea648a344e559156527a7" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&quot;MPI&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MPI_COMM_WORLD_rank_local&quot;</highlight><highlight class="normal">,<sp/>local_rank);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;profile_map.<ref refid="classNESO_1_1Particles_1_1ProfileMap_1addffa4b53d0ea648a344e559156527a7" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&quot;SYCL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEVICE_COUNT&quot;</highlight><highlight class="normal">,<sp/>num_devices);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;profile_map.<ref refid="classNESO_1_1Particles_1_1ProfileMap_1addffa4b53d0ea648a344e559156527a7" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&quot;SYCL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEVICE_INDEX&quot;</highlight><highlight class="normal">,<sp/>device_index);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;profile_map.<ref refid="classNESO_1_1Particles_1_1ProfileMap_1addffa4b53d0ea648a344e559156527a7" kindref="member">set</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYCL&quot;</highlight><highlight class="normal">,<sp/>this-&gt;device.get_info&lt;sycl::info::device::name&gt;(),<sp/>0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;queue<sp/>=<sp/>sycl::queue(this-&gt;device);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;comm<sp/>=<sp/>comm;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;profile_map.<ref refid="classNESO_1_1Particles_1_1ProfileMap_1addffa4b53d0ea648a344e559156527a7" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&quot;MPI&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MPI_COMM_WORLD_rank&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;comm_pair.<ref refid="classNESO_1_1Particles_1_1CommPair_1afc5bc62604f7216469e42df1de8b8d3c" kindref="member">rank_parent</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;profile_map.<ref refid="classNESO_1_1Particles_1_1ProfileMap_1addffa4b53d0ea648a344e559156527a7" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&quot;MPI&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MPI_COMM_WORLD_size&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;comm_pair.<ref refid="classNESO_1_1Particles_1_1CommPair_1a03a30c8e1ac6a9070f92d96f1fc9d02e" kindref="member">size_parent</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_OOB_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx<sp/>=<sp/>0;<sp/>cx<sp/>&lt;<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>;<sp/>cx++)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ptr_bit_mask[cx]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(255);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149" refid="classNESO_1_1Particles_1_1SYCLTarget_1ae347865364f693955c1cb69f6eccaa5e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1ae347865364f693955c1cb69f6eccaa5e" kindref="member">~SYCLTarget</ref>()<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_OOB_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;ptr_map.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;px<sp/>:<sp/>this-&gt;ptr_map)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNESO_1_1Particles_1a5c30c64658955dcc040138de5223791e" kindref="member">nprint</ref>(</highlight><highlight class="stringliteral">&quot;NOT<sp/>FREED:&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)px.first,<sp/>px.second);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNESO_1_1Particles_1a5c30c64658955dcc040138de5223791e" kindref="member">nprint</ref>(</highlight><highlight class="stringliteral">&quot;ALL<sp/>FREED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classNESO_1_1Particles_1_1SYCLTarget_1ab606d13eb81af0d2b6c51d31f755a4ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1ab606d13eb81af0d2b6c51d31f755a4ae" kindref="member">print_device_info</ref>()<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;comm_pair.<ref refid="classNESO_1_1Particles_1_1CommPair_1afc5bc62604f7216469e42df1de8b8d3c" kindref="member">rank_parent</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;device.get_info&lt;sycl::info::device::name&gt;()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Kernel<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="typedefs_8hpp_1ac7b3da8d0a6f346d5cc29efac55b8f8f" kindref="member">NESO_PARTICLES_DEVICE_LABEL</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classNESO_1_1Particles_1_1SYCLTarget_1a049cff60dfcccfefeb7b59b2f27c2db1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a049cff60dfcccfefeb7b59b2f27c2db1" kindref="member">free</ref>()<sp/>{<sp/>comm_pair.<ref refid="classNESO_1_1Particles_1_1CommPair_1a78b3ae9c7dfb105c37198df8e27f56c8" kindref="member">free</ref>();<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classNESO_1_1Particles_1_1SYCLTarget_1aadec63cba71d351b617d544a36d577d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classNESO_1_1Particles_1_1SYCLTarget_1aadec63cba71d351b617d544a36d577d5" kindref="member">malloc_device</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size_bytes)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEBUG_OOB_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sycl::malloc_device(size_bytes,<sp/>this-&gt;queue);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)sycl::malloc_device(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_bytes<sp/>+<sp/>2<sp/>*<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>,<sp/>this-&gt;queue);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr_user<sp/>=<sp/>ptr<sp/>+<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ptr_map[ptr_user]<sp/>=<sp/>size_bytes;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pad<sp/>pointer<sp/>from<sp/>malloc_device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;queue.memcpy(ptr,<sp/>this-&gt;ptr_bit_mask.data(),<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>).wait();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;queue</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.memcpy(ptr_user<sp/>+<sp/>size_bytes,<sp/>this-&gt;ptr_bit_mask.data(),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ptr_user;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>ptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classNESO_1_1Particles_1_1SYCLTarget_1a93d9320f2655bdb887ab9a8398a030b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a93d9320f2655bdb887ab9a8398a030b0" kindref="member">malloc_host</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size_bytes)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEBUG_OOB_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sycl::malloc_host(size_bytes,<sp/>this-&gt;queue);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)sycl::malloc_host(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_bytes<sp/>+<sp/>2<sp/>*<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>,<sp/>this-&gt;queue);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr_user<sp/>=<sp/>ptr<sp/>+<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ptr_map[ptr_user]<sp/>=<sp/>size_bytes;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pad<sp/>pointer<sp/>from<sp/>malloc_host&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;queue.memcpy(ptr,<sp/>this-&gt;ptr_bit_mask.data(),<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>).wait();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;queue</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.memcpy(ptr_user<sp/>+<sp/>size_bytes,<sp/>this-&gt;ptr_bit_mask.data(),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ptr_user;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>ptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classNESO_1_1Particles_1_1SYCLTarget_1a0dad49ff080e8d96155b6c13bfaf26e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a0dad49ff080e8d96155b6c13bfaf26e5" kindref="member">free</ref>(T<sp/>*ptr_in)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEBUG_OOB_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::free(ptr_in,<sp/>this-&gt;queue);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr_in;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;ptr_map.count(ptr),<sp/></highlight><highlight class="stringliteral">&quot;point<sp/>not<sp/>alloced<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;check_ptr(ptr,<sp/>this-&gt;ptr_map[ptr]);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ptr_map.erase(ptr);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(ptr<sp/>-<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>),<sp/>this-&gt;queue);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sycl::free(ptr_in,<sp/>this-&gt;queue);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classNESO_1_1Particles_1_1SYCLTarget_1af3ef5873f83476daf5b8134c89f20380" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1af3ef5873f83476daf5b8134c89f20380" kindref="member">check_ptrs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;px<sp/>:<sp/>this-&gt;ptr_map)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;check_ptr(px.first,<sp/>px.second);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classNESO_1_1Particles_1_1SYCLTarget_1a607a5b1d5b3078642a2b7b2940e59732" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1SYCLTarget_1a607a5b1d5b3078642a2b7b2940e59732" kindref="member">check_ptr</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr_user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size_bytes)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_OOB_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;queue</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.memcpy(this-&gt;ptr_bit_tmp.data(),<sp/>ptr_user<sp/>-<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx<sp/>=<sp/>0;<sp/>cx<sp/>&lt;<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>;<sp/>cx++)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;ptr_bit_tmp[cx]<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(255),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DEBUG<sp/>PADDING<sp/>START<sp/>TOUCHED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;queue</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.memcpy(this-&gt;ptr_bit_tmp.data(),<sp/>ptr_user<sp/>+<sp/>size_bytes,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx<sp/>=<sp/>0;<sp/>cx<sp/>&lt;<sp/><ref refid="typedefs_8hpp_1ad891d028b019d7d42d0b62d3bf17bd4d" kindref="member">DEBUG_OOB_WIDTH</ref>;<sp/>cx++)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;ptr_bit_tmp[cx]<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(255),</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DEBUG<sp/>PADDING<sp/>END<sp/>TOUCHED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal">};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;SYCLTarget&gt;<sp/><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classNESO_1_1Particles_1_1BufferBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNESO_1_1Particles_1_1BufferBase" kindref="compound">BufferBase</ref><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293" refid="classNESO_1_1Particles_1_1BufferBase_1af7d84ef8e5d2df1cb9809627662db794" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="classNESO_1_1Particles_1_1BufferBase_1af7d84ef8e5d2df1cb9809627662db794" kindref="member">malloc_wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>num_bytes)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="294" refid="classNESO_1_1Particles_1_1BufferBase_1a08f1396df310f41a669ba2958fb3ce9f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1a08f1396df310f41a669ba2958fb3ce9f" kindref="member">free_wrapper</ref>(T<sp/>*ptr)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classNESO_1_1Particles_1_1BufferBase_1ae7117c28e09351b63bf666eded1583ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1ae7117c28e09351b63bf666eded1583ca" kindref="member">generic_init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Buffer<sp/>is<sp/>already<sp/>allocated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ptr<sp/>=<sp/>this-&gt;malloc_wrapper(this-&gt;size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;generic_init<sp/>set<sp/>nullptr.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303" refid="classNESO_1_1Particles_1_1BufferBase_1aff8a6488dfe7c319b1d3b6cf00e432a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1aff8a6488dfe7c319b1d3b6cf00e432a5" kindref="member">generic_free</ref>()<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;free_wrapper(this-&gt;ptr);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classNESO_1_1Particles_1_1BufferBase_1a4c88a1e8642563dbe58b26f035d42010" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1a4c88a1e8642563dbe58b26f035d42010" kindref="member">BufferBase</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>sycl_target,<sp/>std::size_t<sp/>size)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sycl_target(sycl_target),<sp/>size(size),<sp/>ptr(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classNESO_1_1Particles_1_1BufferBase_1a9afa08d6887c98eac5ecd6b1122f2bac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1a9afa08d6887c98eac5ecd6b1122f2bac" kindref="member">assert_allocated</ref>()<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Allocated<sp/>buffer<sp/>required<sp/>but<sp/>pointer<sp/>is<sp/>nullptr.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320" refid="classNESO_1_1Particles_1_1BufferBase_1aa4087d350a7b29359e57c29c0fbf03e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1aa4087d350a7b29359e57c29c0fbf03e1" kindref="member">sycl_target</ref>;</highlight></codeline>
<codeline lineno="322" refid="classNESO_1_1Particles_1_1BufferBase_1a4fa4e9e6d9ee4062b32ad8423ac2d5c6" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/>*<ref refid="classNESO_1_1Particles_1_1BufferBase_1a4fa4e9e6d9ee4062b32ad8423ac2d5c6" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="324" refid="classNESO_1_1Particles_1_1BufferBase_1a3524b68561d41cef6d751619ec350302" refkind="member"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1a3524b68561d41cef6d751619ec350302" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classNESO_1_1Particles_1_1BufferBase_1ababd32d56ecd6ff5928b5871273f2857" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1ababd32d56ecd6ff5928b5871273f2857" kindref="member">size_bytes</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);<sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classNESO_1_1Particles_1_1BufferBase_1abc60eb9a9d24f1f1113a1b0f9bfe5247" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1abc60eb9a9d24f1f1113a1b0f9bfe5247" kindref="member">realloc_no_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>this-&gt;size)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;assert_allocated();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;free_wrapper(this-&gt;ptr);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ptr<sp/>=<sp/>this-&gt;malloc_wrapper(size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;size;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="classNESO_1_1Particles_1_1BufferBase_1a169e070870fe8f13b1f2d659b2cb78b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>sycl::event<sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1a169e070870fe8f13b1f2d659b2cb78b0" kindref="member">set_async</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(data.size()<sp/>==<sp/>this-&gt;size,<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>data<sp/>is<sp/>incorrectly<sp/>sized.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>size_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>this-&gt;size;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_bytes)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>pointer<sp/>is<sp/>not<sp/>allocated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;assert_allocated();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>copy_event<sp/>=</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl_target-&gt;queue.memcpy(this-&gt;ptr,<sp/>data.data(),<sp/>size_bytes);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy_event;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sycl::event();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classNESO_1_1Particles_1_1BufferBase_1ae989a4598f4df4e39bf70e6d3e6c8f33" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1ae989a4598f4df4e39bf70e6d3e6c8f33" kindref="member">set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;set_async(data).wait_and_throw();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="classNESO_1_1Particles_1_1BufferBase_1ae77b2e1f9d942deb752bc0497be5d84e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>sycl::event<sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1ae77b2e1f9d942deb752bc0497be5d84e" kindref="member">get_async</ref>(std::vector&lt;T&gt;<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(data.size()<sp/>==<sp/>this-&gt;size,<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>data<sp/>is<sp/>incorrectly<sp/>sized.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>size_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>this-&gt;size;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_bytes)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>copy_event<sp/>=</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl_target-&gt;queue.memcpy(data.data(),<sp/>this-&gt;ptr,<sp/>size_bytes);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy_event;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sycl::event();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="classNESO_1_1Particles_1_1BufferBase_1a7574fdbba3df6fd9d47eeeb616efcc08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1a7574fdbba3df6fd9d47eeeb616efcc08" kindref="member">get</ref>(std::vector&lt;T&gt;<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;get_async(data).wait_and_throw();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classNESO_1_1Particles_1_1BufferBase_1ae56bd99f1ca953323d3e9450dd4a15ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/><ref refid="classNESO_1_1Particles_1_1BufferBase_1ae56bd99f1ca953323d3e9450dd4a15ff" kindref="member">get</ref>()<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>data(this-&gt;size);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="namespaceNESO_1_1Particles_1_1Tuple_1ad8460cb9999e2f20091ed925d957d035" kindref="member">get</ref>(data);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal">};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="classNESO_1_1Particles_1_1BufferDevice" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase" kindref="compound">BufferBase</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="425" refid="classNESO_1_1Particles_1_1BufferDevice_1abaa600d953d48844ca62dc35beb5cfd5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="classNESO_1_1Particles_1_1BufferDevice_1abaa600d953d48844ca62dc35beb5cfd5" kindref="member">malloc_wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>num_bytes)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;sycl_target-&gt;malloc_device(num_bytes));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428" refid="classNESO_1_1Particles_1_1BufferDevice_1a741fa9b6b7334f2ba614219ad7840174" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice_1a741fa9b6b7334f2ba614219ad7840174" kindref="member">free_wrapper</ref>(T<sp/>*ptr)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;free(ptr);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="434" refid="classNESO_1_1Particles_1_1BufferDevice_1ac2ec6b173ed12bc937ac22765e78cdbb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice_1ac2ec6b173ed12bc937ac22765e78cdbb" kindref="member">BufferDevice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref><sp/>&amp;st)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436" refid="classNESO_1_1Particles_1_1BufferDevice_1a81b9fc0ea1bcafb95d966194c901e0c1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref><sp/>&amp;<ref refid="classNESO_1_1Particles_1_1BufferDevice_1a81b9fc0ea1bcafb95d966194c901e0c1" kindref="member">operator=</ref>(<ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="classNESO_1_1Particles_1_1BufferDevice_1a40ffda943cd98bf20d1582d41d6d61ce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice_1a40ffda943cd98bf20d1582d41d6d61ce" kindref="member">BufferDevice</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>&amp;sycl_target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNESO_1_1Particles_1_1BufferBase" kindref="compound">BufferBase</ref>&lt;T&gt;(sycl_target,<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;generic_init();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="classNESO_1_1Particles_1_1BufferDevice_1a4dda438c8f32e50b0c5056a9e657506b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice_1a4dda438c8f32e50b0c5056a9e657506b" kindref="member">BufferDevice</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>sycl_target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;vec)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref>(sycl_target,<sp/>vec.size())<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;set(vec);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="classNESO_1_1Particles_1_1BufferDevice_1aa545c4dc9e4f9268692a8ae285510304" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice_1aa545c4dc9e4f9268692a8ae285510304" kindref="member">~BufferDevice</ref>()<sp/>{<sp/>this-&gt;generic_free();<sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal">};</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classNESO_1_1Particles_1_1BufferShared" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNESO_1_1Particles_1_1BufferShared" kindref="compound">BufferShared</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase" kindref="compound">BufferBase</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="469" refid="classNESO_1_1Particles_1_1BufferShared_1aeb4391bc97436634530dc9d5afd708f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="classNESO_1_1Particles_1_1BufferShared_1aeb4391bc97436634530dc9d5afd708f2" kindref="member">malloc_wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>num_bytes)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::malloc_shared(num_bytes,<sp/>this-&gt;sycl_target-&gt;queue));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473" refid="classNESO_1_1Particles_1_1BufferShared_1a44b9eba712ad6292867c5397d04e126f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferShared_1a44b9eba712ad6292867c5397d04e126f" kindref="member">free_wrapper</ref>(T<sp/>*ptr)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::free(this-&gt;ptr,<sp/>this-&gt;sycl_target-&gt;queue);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="479" refid="classNESO_1_1Particles_1_1BufferShared_1a91c299ec16175789b18652f3a0fae96b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferShared_1a91c299ec16175789b18652f3a0fae96b" kindref="member">BufferShared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferShared" kindref="compound">BufferShared</ref><sp/>&amp;st)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481" refid="classNESO_1_1Particles_1_1BufferShared_1af7af79fef0f14a716b5cca8244187a3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferShared" kindref="compound">BufferShared</ref><sp/>&amp;<ref refid="classNESO_1_1Particles_1_1BufferShared_1af7af79fef0f14a716b5cca8244187a3f" kindref="member">operator=</ref>(<ref refid="classNESO_1_1Particles_1_1BufferShared" kindref="compound">BufferShared</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="classNESO_1_1Particles_1_1BufferShared_1a5b3384f4322ce3fc7f4f21fc93ad26c1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferShared_1a5b3384f4322ce3fc7f4f21fc93ad26c1" kindref="member">BufferShared</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>sycl_target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNESO_1_1Particles_1_1BufferBase" kindref="compound">BufferBase</ref>&lt;T&gt;(sycl_target,<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;generic_init();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="classNESO_1_1Particles_1_1BufferShared_1ab876bcb1d95af9175ac4a067045d2ee0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferShared_1ab876bcb1d95af9175ac4a067045d2ee0" kindref="member">BufferShared</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>sycl_target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;vec)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNESO_1_1Particles_1_1BufferShared" kindref="compound">BufferShared</ref>(sycl_target,<sp/>vec.size())<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;set(vec);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="classNESO_1_1Particles_1_1BufferShared_1a935cd9a51b5b31a22fe7279aba802fe9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferShared_1a935cd9a51b5b31a22fe7279aba802fe9" kindref="member">~BufferShared</ref>()<sp/>{<sp/>this-&gt;generic_free();<sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">};</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classNESO_1_1Particles_1_1BufferHost" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNESO_1_1Particles_1_1BufferHost" kindref="compound">BufferHost</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferBase" kindref="compound">BufferBase</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="514" refid="classNESO_1_1Particles_1_1BufferHost_1a4021d447d00078a6cbc912256336a982" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="classNESO_1_1Particles_1_1BufferHost_1a4021d447d00078a6cbc912256336a982" kindref="member">malloc_wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>num_bytes)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;sycl_target-&gt;malloc_host(num_bytes));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517" refid="classNESO_1_1Particles_1_1BufferHost_1a5c88dc54a1b4cf1c5e243c2ded7e0f15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferHost_1a5c88dc54a1b4cf1c5e243c2ded7e0f15" kindref="member">free_wrapper</ref>(T<sp/>*ptr)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;free(ptr);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="523" refid="classNESO_1_1Particles_1_1BufferHost_1ad50c8481769546787ab629bdd152ea2c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferHost_1ad50c8481769546787ab629bdd152ea2c" kindref="member">BufferHost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferHost" kindref="compound">BufferHost</ref><sp/>&amp;st)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525" refid="classNESO_1_1Particles_1_1BufferHost_1a625118154c8248135f1373fd36efc2ba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferHost" kindref="compound">BufferHost</ref><sp/>&amp;<ref refid="classNESO_1_1Particles_1_1BufferHost_1a625118154c8248135f1373fd36efc2ba" kindref="member">operator=</ref>(<ref refid="classNESO_1_1Particles_1_1BufferHost" kindref="compound">BufferHost</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="classNESO_1_1Particles_1_1BufferHost_1af3a79babe6b0874a2594c3655813e45d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferHost_1af3a79babe6b0874a2594c3655813e45d" kindref="member">BufferHost</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>sycl_target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNESO_1_1Particles_1_1BufferBase" kindref="compound">BufferBase</ref>&lt;T&gt;(sycl_target,<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;generic_init();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="classNESO_1_1Particles_1_1BufferHost_1a91f777832d21db0b5654440e04deaed3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferHost_1a91f777832d21db0b5654440e04deaed3" kindref="member">BufferHost</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>sycl_target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;vec)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNESO_1_1Particles_1_1BufferHost" kindref="compound">BufferHost</ref>(sycl_target,<sp/>vec.size())<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;set(vec);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="classNESO_1_1Particles_1_1BufferHost_1a3a455c68f58ed3c5134e294c768135c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferHost_1a3a455c68f58ed3c5134e294c768135c4" kindref="member">~BufferHost</ref>()<sp/>{<sp/>this-&gt;generic_free();<sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal">};</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="classNESO_1_1Particles_1_1BufferDeviceHost" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost" kindref="compound">BufferDeviceHost</ref><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="563" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a6bea6e297d85770e66ec31a489b1124e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a6bea6e297d85770e66ec31a489b1124e" kindref="member">BufferDeviceHost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost" kindref="compound">BufferDeviceHost</ref><sp/>&amp;st)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a05e6aa0544dff428b733473ae224d373" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost" kindref="compound">BufferDeviceHost</ref><sp/>&amp;<ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a05e6aa0544dff428b733473ae224d373" kindref="member">operator=</ref>(<ref refid="classNESO_1_1Particles_1_1BufferDeviceHost" kindref="compound">BufferDeviceHost</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a602e35154b4a6e6f52ca21a604bd03b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a602e35154b4a6e6f52ca21a604bd03b7" kindref="member">sycl_target</ref>;</highlight></codeline>
<codeline lineno="570" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a283a6ed6915381585ceacb1e6a0b76ba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a283a6ed6915381585ceacb1e6a0b76ba" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a1ff186642e20b8eab83618f270d2399f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice&lt;T&gt;</ref><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a1ff186642e20b8eab83618f270d2399f" kindref="member">d_buffer</ref>;</highlight></codeline>
<codeline lineno="575" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a83aa01895446461fd429ccbbb3284f04" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferHost" kindref="compound">BufferHost&lt;T&gt;</ref><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a83aa01895446461fd429ccbbb3284f04" kindref="member">h_buffer</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a421b0e3e919c6fcce8bbdb442ea8c716" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a421b0e3e919c6fcce8bbdb442ea8c716" kindref="member">~BufferDeviceHost</ref>(){};</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1acc9746bde169dcb477c0c2049e262e2f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1acc9746bde169dcb477c0c2049e262e2f" kindref="member">BufferDeviceHost</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>sycl_target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sycl_target(sycl_target),<sp/>size(size),<sp/>d_buffer(sycl_target,<sp/>size),</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_buffer(sycl_target,<sp/>size){};</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a5178958f0967641202ff97a22f17b271" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a5178958f0967641202ff97a22f17b271" kindref="member">BufferDeviceHost</ref>(<ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref><sp/>sycl_target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;vec)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sycl_target(sycl_target),<sp/>size(vec.size()),<sp/>d_buffer(sycl_target,<sp/>vec),</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_buffer(sycl_target,<sp/>vec){};</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1aaed114b01a513e5f225cd1832ddb0248" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1aaed114b01a513e5f225cd1832ddb0248" kindref="member">size_bytes</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);<sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a0a22e4edb8bc351f1968eb04d821ad69" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a0a22e4edb8bc351f1968eb04d821ad69" kindref="member">realloc_no_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;d_buffer.<ref refid="classNESO_1_1Particles_1_1BufferBase_1abc60eb9a9d24f1f1113a1b0f9bfe5247" kindref="member">realloc_no_copy</ref>(size);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;h_buffer.<ref refid="classNESO_1_1Particles_1_1BufferBase_1abc60eb9a9d24f1f1113a1b0f9bfe5247" kindref="member">realloc_no_copy</ref>(size);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;size;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a05a8c58f476616576a3eb15d4f8a185e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a05a8c58f476616576a3eb15d4f8a185e" kindref="member">host_to_device</ref>()<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;size_bytes()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;queue</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.memcpy(this-&gt;d_buffer.<ref refid="classNESO_1_1Particles_1_1BufferBase_1a4fa4e9e6d9ee4062b32ad8423ac2d5c6" kindref="member">ptr</ref>,<sp/>this-&gt;h_buffer.ptr,<sp/>this-&gt;size_bytes())</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a83c4d8b9ad98ba60aaab700a40750653" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a83c4d8b9ad98ba60aaab700a40750653" kindref="member">device_to_host</ref>()<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;size_bytes()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sycl_target-&gt;queue</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.memcpy(this-&gt;h_buffer.<ref refid="classNESO_1_1Particles_1_1BufferBase_1a4fa4e9e6d9ee4062b32ad8423ac2d5c6" kindref="member">ptr</ref>,<sp/>this-&gt;d_buffer.ptr,<sp/>this-&gt;size_bytes())</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.wait();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="649" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a0e104498ab81355a75220e43830776d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>sycl::event<sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a0e104498ab81355a75220e43830776d7" kindref="member">async_host_to_device</ref>()<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;size_bytes()<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Zero<sp/>sized<sp/>copy<sp/>issued.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;sycl_target-&gt;queue.memcpy(</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;d_buffer.<ref refid="classNESO_1_1Particles_1_1BufferBase_1a4fa4e9e6d9ee4062b32ad8423ac2d5c6" kindref="member">ptr</ref>,<sp/>this-&gt;h_buffer.ptr,<sp/>this-&gt;size_bytes());</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="659" refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a226b5f71b3afe4cb3506114142014e0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>sycl::event<sp/><ref refid="classNESO_1_1Particles_1_1BufferDeviceHost_1a226b5f71b3afe4cb3506114142014e0c" kindref="member">async_device_to_host</ref>()<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(this-&gt;size_bytes()<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Zero<sp/>sized<sp/>copy<sp/>issued.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;sycl_target-&gt;queue.memcpy(</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;h_buffer.<ref refid="classNESO_1_1Particles_1_1BufferBase_1a4fa4e9e6d9ee4062b32ad8423ac2d5c6" kindref="member">ptr</ref>,<sp/>this-&gt;d_buffer.ptr,<sp/>this-&gt;size_bytes());</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal">};</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="675" refid="namespaceNESO_1_1Particles_1a2390c80a098101e7a54f2c843cccf917" refkind="member"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>sycl::event<sp/><ref refid="namespaceNESO_1_1Particles_1a2390c80a098101e7a54f2c843cccf917" kindref="member">buffer_memcpy</ref>(D&lt;T&gt;<sp/>&amp;dst,<sp/>S&lt;T&gt;<sp/>&amp;src)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="typedefs_8hpp_1ac780e64fe76ab7e5f6b07c55de92d018" kindref="member">NESOASSERT</ref>(dst.size<sp/>==<sp/>src.size,<sp/></highlight><highlight class="stringliteral">&quot;Buffers<sp/>have<sp/>different<sp/>sizes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst.sycl_target-&gt;queue.memcpy(dst.ptr,<sp/>src.ptr,<sp/>dst.size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="classNESO_1_1Particles_1_1EventStack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNESO_1_1Particles_1_1EventStack" kindref="compound">EventStack</ref><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>std::stack&lt;sycl::event&gt;<sp/>stack;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="689" refid="classNESO_1_1Particles_1_1EventStack_1a104310aa29a06bceb5b46acf95c42692" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1EventStack_1a104310aa29a06bceb5b46acf95c42692" kindref="member">~EventStack</ref>(){};</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="classNESO_1_1Particles_1_1EventStack_1aba1faf2650782e9543c9a44860541870" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classNESO_1_1Particles_1_1EventStack_1aba1faf2650782e9543c9a44860541870" kindref="member">EventStack</ref>(){};</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="classNESO_1_1Particles_1_1EventStack_1aee8a0be331891915bf8dccd4359aea20" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1EventStack_1aee8a0be331891915bf8dccd4359aea20" kindref="member">push</ref>(sycl::event<sp/>e)<sp/>{<sp/>this-&gt;stack.push(e);<sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="classNESO_1_1Particles_1_1EventStack_1a6904b30365c9a305408d7db689487aa3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNESO_1_1Particles_1_1EventStack_1a6904b30365c9a305408d7db689487aa3" kindref="member">wait</ref>()<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!this-&gt;stack.empty())<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;stack.top().wait();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;stack.pop();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="710"><highlight class="normal">};</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="namespaceNESO_1_1Particles_1a195b5e48d62b7b73debd0cb36e9e3c47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>sycl::nd_range&lt;1&gt;<sp/><ref refid="namespaceNESO_1_1Particles_1a195b5e48d62b7b73debd0cb36e9e3c47" kindref="member">get_nd_range_1d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>size,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>local_size)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>div_mod<sp/>=<sp/>std::div(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size),</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(local_size));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>outer_size<sp/>=</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(div_mod.quot<sp/>+<sp/>(div_mod.rem<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>1));</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sycl::nd_range(sycl::range&lt;1&gt;(outer_size<sp/>*<sp/>local_size),</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::range&lt;1&gt;(local_size));</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="structNESO_1_1Particles_1_1NDRangePeel1D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structNESO_1_1Particles_1_1NDRangePeel1D" kindref="compound">NDRangePeel1D</ref><sp/>{</highlight></codeline>
<codeline lineno="736" refid="structNESO_1_1Particles_1_1NDRangePeel1D_1ace10098a8bd4b67a432ae5458af04058" refkind="member"><highlight class="normal"><sp/><sp/>sycl::nd_range&lt;1&gt;<sp/><ref refid="structNESO_1_1Particles_1_1NDRangePeel1D_1ace10098a8bd4b67a432ae5458af04058" kindref="member">loop_main</ref>;</highlight></codeline>
<codeline lineno="738" refid="structNESO_1_1Particles_1_1NDRangePeel1D_1affa4eced0e2023879643ea0c554817ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1NDRangePeel1D_1affa4eced0e2023879643ea0c554817ca" kindref="member">peel_exists</ref>;</highlight></codeline>
<codeline lineno="740" refid="structNESO_1_1Particles_1_1NDRangePeel1D_1a6b17a5d64e62a8f719211664295fbb95" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1NDRangePeel1D_1a6b17a5d64e62a8f719211664295fbb95" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="744" refid="structNESO_1_1Particles_1_1NDRangePeel1D_1a1b95033b969cd755193922fde416f578" refkind="member"><highlight class="normal"><sp/><sp/>sycl::nd_range&lt;1&gt;<sp/><ref refid="structNESO_1_1Particles_1_1NDRangePeel1D_1a1b95033b969cd755193922fde416f578" kindref="member">loop_peel</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">};</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="namespaceNESO_1_1Particles_1a8c99098b85d1e80c42694c3528a5a1b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1NDRangePeel1D" kindref="compound">NDRangePeel1D</ref><sp/><ref refid="namespaceNESO_1_1Particles_1a8c99098b85d1e80c42694c3528a5a1b8" kindref="member">get_nd_range_peel_1d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>size,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>local_size)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>div_mod<sp/>=<sp/>std::div(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size),</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(local_size));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>outer_size<sp/>=</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(div_mod.quot)<sp/>*<sp/>local_size;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>peel_exists<sp/>=<sp/>!(div_mod.rem<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>outer_size_peel<sp/>=<sp/>(peel_exists<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>*<sp/>local_size;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>outer_size;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structNESO_1_1Particles_1_1NDRangePeel1D" kindref="compound">NDRangePeel1D</ref>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::nd_range&lt;1&gt;(sycl::range&lt;1&gt;(outer_size),<sp/>sycl::range&lt;1&gt;(local_size)),</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>peel_exists,<sp/>offset,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sycl::nd_range&lt;1&gt;(sycl::range&lt;1&gt;(outer_size_peel),</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::range&lt;1&gt;(local_size))};</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>NESO::Particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp"/>
  </compounddef>
</doxygen>
