<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classNESO_1_1Particles_1_1ParticleLoop" kind="class" language="C++" prot="public">
    <compoundname>NESO::Particles::ParticleLoop</compoundname>
    <basecompoundref refid="classNESO_1_1Particles_1_1ParticleLoopBase" prot="public" virt="non-virtual">NESO::Particles::ParticleLoopBase</basecompoundref>
    <includes refid="particle__loop_8hpp" local="no">particle_loop.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename KERNEL</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>ARGS</declname>
        <defname>ARGS</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classNESO_1_1Particles_1_1ParticleLoop_1a394d431706b7ab567464921ba169de70" prot="protected" static="no">
        <type><ref refid="structNESO_1_1Particles_1_1Tuple_1_1Tuple" kindref="compound">Tuple::Tuple</ref>&lt; loop_parameter_t&lt; ARGS &gt;... &gt;</type>
        <definition>using NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::loop_parameter_type =  Tuple::Tuple&lt;loop_parameter_t&lt;ARGS&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>loop_parameter_type</name>
        <briefdescription>
<para>The types of the parameters for the outside loops. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="213" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classNESO_1_1Particles_1_1ParticleLoop_1ab137330cfc5bfbe29e5e69534acc4906" prot="protected" static="no">
        <type><ref refid="structNESO_1_1Particles_1_1Tuple_1_1Tuple" kindref="compound">Tuple::Tuple</ref>&lt; kernel_parameter_t&lt; ARGS &gt;... &gt;</type>
        <definition>using NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::kernel_parameter_type =  Tuple::Tuple&lt;kernel_parameter_t&lt;ARGS&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>kernel_parameter_type</name>
        <briefdescription>
<para>The types of the arguments passed to the kernel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="215" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a7e8a81752f0d86ab5b35766786f8ace5" prot="protected" static="no" mutable="no">
        <type>std::tuple&lt; ARGS... &gt;</type>
        <definition>std::tuple&lt;ARGS...&gt; NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
<para><ref refid="namespaceNESO_1_1Particles_1_1Tuple" kindref="compound">Tuple</ref> of the arguments passed to the <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> on construction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="217" column="14" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a236bd09ae49b6d073a2dbaf9a2c971f8" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceNESO_1_1Particles_1a5b25ad0df23c80f6feed27e2527a5c51" kindref="member">ParticleGroupSharedPtr</ref></type>
        <definition>ParticleGroupSharedPtr NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::particle_group_shrptr</definition>
        <argsstring></argsstring>
        <name>particle_group_shrptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="272" column="26" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a6dc1da877237bcf5e3e854edf18d5559" prot="protected" static="no" mutable="no">
        <type><ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref> *</type>
        <definition>ParticleGroup* NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::particle_group_ptr</definition>
        <argsstring></argsstring>
        <name>particle_group_ptr</name>
        <initializer>= {nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="273" column="17" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a464f8e606e1ae97dea1369961647db95" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref></type>
        <definition>SYCLTargetSharedPtr NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::sycl_target</definition>
        <argsstring></argsstring>
        <name>sycl_target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="274" column="23" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a70d1c810f40539561459f0bf6c3b602b" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; void &gt;</type>
        <definition>std::shared_ptr&lt;void&gt; NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::particle_dat_init</definition>
        <argsstring></argsstring>
        <name>particle_dat_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This stores the particle dat the loop was created with to prevent use after free errors in the case when the <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> is created with a ParticleDat. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="278" column="19" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1ae6d231d621faffadef90d6d0a73fc335" prot="protected" static="no" mutable="no">
        <type>KERNEL</type>
        <definition>KERNEL NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::kernel</definition>
        <argsstring></argsstring>
        <name>kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="279" column="10" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a605bdf33672d3d7ba8740e80015552bb" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopIterationSet" kindref="compound">ParticleLoopImplementation::ParticleLoopIterationSet</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ParticleLoopImplementation::ParticleLoopIterationSet&gt; NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::iteration_set</definition>
        <argsstring></argsstring>
        <name>iteration_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="281" column="7" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1ad86cdd35d4aa64309282e4ada6a53062" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::loop_type</definition>
        <argsstring></argsstring>
        <name>loop_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="282" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1ab4d2bd483af6420c076fae16b49725f4" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="283" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a96c886a41776bfc01a432b65aec7b874" prot="protected" static="no" mutable="no">
        <type><ref refid="classNESO_1_1Particles_1_1EventStack" kindref="compound">EventStack</ref></type>
        <definition>EventStack NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::event_stack</definition>
        <argsstring></argsstring>
        <name>event_stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="284" column="14" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a14bfeb8ccbaff434de3fed8f90db002d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::loop_running</definition>
        <argsstring></argsstring>
        <name>loop_running</name>
        <initializer>= {false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="285" column="8" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1afde0dff6a749ccc1904b696bb813833f" prot="protected" static="no" mutable="no">
        <type>int *</type>
        <definition>int* NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::d_npart_cell</definition>
        <argsstring></argsstring>
        <name>d_npart_cell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="287" column="7" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a279f65c1723b8e89ce14266350a15617" prot="protected" static="no" mutable="no">
        <type>int *</type>
        <definition>int* NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::h_npart_cell_lb</definition>
        <argsstring></argsstring>
        <name>h_npart_cell_lb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="288" column="7" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a864da819efe2c3446bab87c356340850" prot="protected" static="no" mutable="no">
        <type>int *</type>
        <definition>int* NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::d_npart_cell_lb</definition>
        <argsstring></argsstring>
        <name>d_npart_cell_lb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="290" column="7" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a9cb1a8c5e78b4a7f298e8286a10de571" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceNESO_1_1Particles_1a4eac77e3de191a85cc05f4b1700cd605" kindref="member">INT</ref> *</type>
        <definition>INT* NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::d_npart_cell_es</definition>
        <argsstring></argsstring>
        <name>d_npart_cell_es</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="292" column="7" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1a3829bce8eb1919a4fefc6a80b7726751" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceNESO_1_1Particles_1a4eac77e3de191a85cc05f4b1700cd605" kindref="member">INT</ref> *</type>
        <definition>INT* NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::d_npart_cell_es_lb</definition>
        <argsstring></argsstring>
        <name>d_npart_cell_es_lb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="295" column="7" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1ParticleLoop_1ae72d41720714abbb03de36bae3737c6b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::ncell</definition>
        <argsstring></argsstring>
        <name>ncell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="296" column="7" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1aaedb7159c085ba8308e405aecd4d0ab5" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::create_loop_arg_cast</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info, sycl::handler &amp;cgh, T&lt; std::shared_ptr&lt; U &gt;&gt; a)</argsstring>
        <name>create_loop_arg_cast</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <param>
          <type>sycl::handler &amp;</type>
          <declname>cgh</declname>
        </param>
        <param>
          <type>T&lt; std::shared_ptr&lt; U &gt;&gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method to compute access to a type wrapped in a shared_ptr. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="167" column="22" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="167" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a87ebf1c0d8e9ea514adb72a8ffd1e5eb" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::create_loop_arg_cast</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info, sycl::handler &amp;cgh, T&lt; U &gt; a)</argsstring>
        <name>create_loop_arg_cast</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <param>
          <type>sycl::handler &amp;</type>
          <declname>cgh</declname>
        </param>
        <param>
          <type>T&lt; U &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method to compute access to a type not wrapper in a shared_ptr </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="177" column="22" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="177" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1aeb6a955f5eed718ee84a7ce11f8de101" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::post_loop_cast</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info, T&lt; std::shared_ptr&lt; U &gt;&gt; a)</argsstring>
        <name>post_loop_cast</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <param>
          <type>T&lt; std::shared_ptr&lt; U &gt;&gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method to compute access to a type wrapped in a shared_ptr. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="192" column="22" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="192" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1aba559c8c9a4a8ed2f668a6ea1e809a6c" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::post_loop_cast</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info, T&lt; U &gt; a)</argsstring>
        <name>post_loop_cast</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <param>
          <type>T&lt; U &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method to compute access to a type not wrapper in a shared_ptr </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="202" column="22" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="202" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1ac47859677f069af66bd9acc07d020a31" prot="protected" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>INDEX</declname>
            <defname>INDEX</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>SIZE</declname>
            <defname>SIZE</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::create_kernel_args_inner</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopIteration &amp;iterationx, const loop_parameter_type &amp;loop_args, kernel_parameter_type &amp;kernel_args)</argsstring>
        <name>create_kernel_args_inner</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopIteration" kindref="compound">ParticleLoopImplementation::ParticleLoopIteration</ref> &amp;</type>
          <declname>iterationx</declname>
        </param>
        <param>
          <type>const <ref refid="classNESO_1_1Particles_1_1ParticleLoop_1a394d431706b7ab567464921ba169de70" kindref="member">loop_parameter_type</ref> &amp;</type>
          <declname>loop_args</declname>
        </param>
        <param>
          <type><ref refid="classNESO_1_1Particles_1_1ParticleLoop_1ab137330cfc5bfbe29e5e69534acc4906" kindref="member">kernel_parameter_type</ref> &amp;</type>
          <declname>kernel_args</declname>
        </param>
        <briefdescription>
<para>recusively assemble the kernel arguments from the loop arguments </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="248" column="32" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="248" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1ae4ddf8ece3a238e60e4261b952968018" prot="protected" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>static constexpr void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::create_kernel_args</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopIteration &amp;iterationx, const loop_parameter_type &amp;loop_args, kernel_parameter_type &amp;kernel_args)</argsstring>
        <name>create_kernel_args</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopIteration" kindref="compound">ParticleLoopImplementation::ParticleLoopIteration</ref> &amp;</type>
          <declname>iterationx</declname>
        </param>
        <param>
          <type>const <ref refid="classNESO_1_1Particles_1_1ParticleLoop_1a394d431706b7ab567464921ba169de70" kindref="member">loop_parameter_type</ref> &amp;</type>
          <declname>loop_args</declname>
        </param>
        <param>
          <type><ref refid="classNESO_1_1Particles_1_1ParticleLoop_1ab137330cfc5bfbe29e5e69534acc4906" kindref="member">kernel_parameter_type</ref> &amp;</type>
          <declname>kernel_args</declname>
        </param>
        <briefdescription>
<para>called before kernel execution to assemble the kernel arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="263" column="32" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="263" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1ac3752de720a3e56797d36a444823f8dd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>INDEX</declname>
            <defname>INDEX</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::unpack_args</definition>
        <argsstring>(U a0)</argsstring>
        <name>unpack_args</name>
        <param>
          <type>U</type>
          <declname>a0</declname>
        </param>
        <briefdescription>
<para>Recursively assemble the tuple args. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="220" column="29" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a64f529b5bfe4a8a5b1d902f5c16a8d49" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>INDEX</declname>
            <defname>INDEX</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::unpack_args</definition>
        <argsstring>(U a0, V... args)</argsstring>
        <name>unpack_args</name>
        <param>
          <type>U</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>V...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="224" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a396ee93063306589a4a78f84c62af10d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>INDEX</declname>
            <defname>INDEX</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>SIZE</declname>
            <defname>SIZE</defname>
          </param>
          <param>
            <type>typename PARAM</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::create_loop_args_inner</definition>
        <argsstring>(ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info, sycl::handler &amp;cgh, PARAM &amp;loop_args)</argsstring>
        <name>create_loop_args_inner</name>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <param>
          <type>sycl::handler &amp;</type>
          <declname>cgh</declname>
        </param>
        <param>
          <type>PARAM &amp;</type>
          <declname>loop_args</declname>
        </param>
        <briefdescription>
<para>Recursively assemble the outer loop arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="231" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="231" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a2618ddf890831d1928fc2c57b6c155a8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::create_loop_args</definition>
        <argsstring>(sycl::handler &amp;cgh, loop_parameter_type &amp;loop_args, ParticleLoopImplementation::ParticleLoopGlobalInfo *global_info)</argsstring>
        <name>create_loop_args</name>
        <param>
          <type>sycl::handler &amp;</type>
          <declname>cgh</declname>
        </param>
        <param>
          <type><ref refid="classNESO_1_1Particles_1_1ParticleLoop_1a394d431706b7ab567464921ba169de70" kindref="member">loop_parameter_type</ref> &amp;</type>
          <declname>loop_args</declname>
        </param>
        <param>
          <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref> *</type>
          <declname>global_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="240" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a760262c6f13fcbea082781eaa393385e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::init_from_particle_dat</definition>
        <argsstring>(ParticleDatSharedPtr&lt; T &gt; particle_dat)</argsstring>
        <name>init_from_particle_dat</name>
        <param>
          <type><ref refid="namespaceNESO_1_1Particles_1ac4ef9b71589140a5226f7c1e966c20bb" kindref="member">ParticleDatSharedPtr</ref>&lt; T &gt;</type>
          <declname>particle_dat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="299" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="299" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a18ef2cb0939dc4b1c0f9afbd6a061c97" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::check_is_sym_inner</definition>
        <argsstring>(T&lt; U &gt; arg)</argsstring>
        <name>check_is_sym_inner</name>
        <param>
          <type>T&lt; U &gt;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="312" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="312" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1abd226dbcd645b9257c28bb4638df6077" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::check_is_sym_inner</definition>
        <argsstring>([[maybe_unused]] T arg)</argsstring>
        <name>check_is_sym_inner</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="319" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="319" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a630dfdda60d36500f29c7f1a99b7a094" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::check_is_sym_outer</definition>
        <argsstring>(T&lt; U &gt; arg)</argsstring>
        <name>check_is_sym_outer</name>
        <param>
          <type>T&lt; U &gt;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="321" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a0a949f103a84ec6f97d5d906e2fed40f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::get_loop_type_int</definition>
        <argsstring>()</argsstring>
        <name>get_loop_type_int</name>
        <reimplementedby refid="classNESO_1_1Particles_1_1ParticleLoopSubGroup_1aa038f93b7e999a6b1946898f8c7bfc49">get_loop_type_int</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="325" column="22" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a840d6d11ac6b6e9f4bd8ba98fd350e73" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structNESO_1_1Particles_1_1ParticleLoopImplementation_1_1ParticleLoopGlobalInfo" kindref="compound">ParticleLoopImplementation::ParticleLoopGlobalInfo</ref></type>
        <definition>ParticleLoopImplementation::ParticleLoopGlobalInfo NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::create_global_info</definition>
        <argsstring>()</argsstring>
        <name>create_global_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="328" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="328" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1aa24dc65aef0c890f56842738bed071dc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::iteration_set_is_empty</definition>
        <argsstring>(const std::optional&lt; int &gt; cell)</argsstring>
        <name>iteration_set_is_empty</name>
        <param>
          <type>const std::optional&lt; int &gt;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="338" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="338" bodyend="350"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1ad70d9b4ae4390982fdda19895f9e7b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::ParticleLoop</definition>
        <argsstring>(const ParticleLoop &amp;st)=delete</argsstring>
        <name>ParticleLoop</name>
        <param>
          <type>const <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
<para>Disable (implicit) copies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="354" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a61f804ea657633f0489e24b38cf87ff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> &amp;</type>
        <definition>ParticleLoop&amp; NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::operator=</definition>
        <argsstring>(ParticleLoop const &amp;a)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Disable (implicit) copies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="356" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a5125330221ebdb289cca155d390794fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::ParticleLoop</definition>
        <argsstring>(const std::string name, ParticleGroupSharedPtr particle_group, KERNEL kernel, ARGS... args)</argsstring>
        <name>ParticleLoop</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespaceNESO_1_1Particles_1a5b25ad0df23c80f6feed27e2527a5c51" kindref="member">ParticleGroupSharedPtr</ref></type>
          <declname>particle_group</declname>
        </param>
        <param>
          <type>KERNEL</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>ARGS...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> that executes a kernel for all particles in the <ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for particle loop. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle_group</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref> to execute kernel for all particles. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>Kernel to execute for all particles in the <ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The remaining arguments are arguments to be passed to the kernel. All arguments must be wrapped in an access descriptor type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="369" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="369" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a44d45028b630e37ed6b4a1cf24cd289c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::ParticleLoop</definition>
        <argsstring>(ParticleGroupSharedPtr particle_group, KERNEL kernel, ARGS... args)</argsstring>
        <name>ParticleLoop</name>
        <param>
          <type><ref refid="namespaceNESO_1_1Particles_1a5b25ad0df23c80f6feed27e2527a5c51" kindref="member">ParticleGroupSharedPtr</ref></type>
          <declname>particle_group</declname>
        </param>
        <param>
          <type>KERNEL</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>ARGS...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> that executes a kernel for all particles in the <ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particle_group</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref> to execute kernel for all particles. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>Kernel to execute for all particles in the <ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The remaining arguments are arguments to be passed to the kernel. All arguments must be wrapped in an access descriptor type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="390" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="390" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a9574749b8965c1ac3aafe64dbb088731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DAT_TYPE</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::ParticleLoop</definition>
        <argsstring>(const std::string name, ParticleDatSharedPtr&lt; DAT_TYPE &gt; particle_dat, KERNEL kernel, ARGS... args)</argsstring>
        <name>ParticleLoop</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespaceNESO_1_1Particles_1ac4ef9b71589140a5226f7c1e966c20bb" kindref="member">ParticleDatSharedPtr</ref>&lt; DAT_TYPE &gt;</type>
          <declname>particle_dat</declname>
        </param>
        <param>
          <type>KERNEL</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>ARGS...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> that executes a kernel for all particles in the ParticleDat.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for particle loop. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle_dat</parametername>
</parameternamelist>
<parameterdescription>
<para>ParticleDat to define the iteration set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>Kernel to execute for all particles in the <ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The remaining arguments are arguments to be passed to the kernel. All arguments must be wrapped in an access descriptor type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="406" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="406" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a810cb2f97dc263415d0198d2fa62d74f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DAT_TYPE</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::ParticleLoop</definition>
        <argsstring>(ParticleDatSharedPtr&lt; DAT_TYPE &gt; particle_dat, KERNEL kernel, ARGS... args)</argsstring>
        <name>ParticleLoop</name>
        <param>
          <type><ref refid="namespaceNESO_1_1Particles_1ac4ef9b71589140a5226f7c1e966c20bb" kindref="member">ParticleDatSharedPtr</ref>&lt; DAT_TYPE &gt;</type>
          <declname>particle_dat</declname>
        </param>
        <param>
          <type>KERNEL</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>ARGS...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> that executes a kernel for all particles in the ParticleDat.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particle_dat</parametername>
</parameternamelist>
<parameterdescription>
<para>ParticleDat to define the iteration set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>Kernel to execute for all particles in the <ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The remaining arguments are arguments to be passed to the kernel. All arguments must be wrapped in an access descriptor type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="432" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="432" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a410b425ab28a3f808921b0cff4cf8b1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::submit</definition>
        <argsstring>(const std::optional&lt; int &gt; cell=std::nullopt)</argsstring>
        <name>submit</name>
        <reimplements refid="classNESO_1_1Particles_1_1ParticleLoopBase_1a76b7989b69559ff3aabbce47c5887991">submit</reimplements>
        <param>
          <type>const std::optional&lt; int &gt;</type>
          <declname>cell</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Launch the <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> and return. Must be called collectively over the MPI communicator of the <ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref>. Loop execution is complete when the corresponding call to wait returns.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional cell index to only launch the <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> over. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="443" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="443" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a88ce6aec00dbba8778a34b77a5eaf5f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::wait</definition>
        <argsstring>()</argsstring>
        <name>wait</name>
        <reimplements refid="classNESO_1_1Particles_1_1ParticleLoopBase_1a9037d55ec2fc33a423abf900b2fb2e16">wait</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for loop execution to complete. On completion perform post-loop actions. Must be called collectively on communicator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="498" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="498" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1ParticleLoop_1a9dc351b7fdff46aabc878fff6273b36b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;::execute</definition>
        <argsstring>(const std::optional&lt; int &gt; cell=std::nullopt)</argsstring>
        <name>execute</name>
        <reimplements refid="classNESO_1_1Particles_1_1ParticleLoopBase_1a233034f6af9641769f4d3983a2774874">execute</reimplements>
        <param>
          <type>const std::optional&lt; int &gt;</type>
          <declname>cell</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute the <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> and block until execution is complete. Must be called collectively on the MPI communicator associated with the <ref refid="classNESO_1_1Particles_1_1SYCLTarget" kindref="compound">SYCLTarget</ref> this loop is over.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional cell to launch the <ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> over. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="518" column="15" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="518" bodyend="525"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classNESO_1_1Particles_1_1ParticleLoop" kindref="compound">ParticleLoop</ref> loop type. The particle loop applies the given kernel to all particles in a <ref refid="classNESO_1_1Particles_1_1ParticleGroup" kindref="compound">ParticleGroup</ref>. The kernel must be independent of the execution order (i.e. parallel and unsequenced in C++ terminology). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;</label>
        <link refid="classNESO_1_1Particles_1_1ParticleLoop"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NESO::Particles::ParticleLoopBase</label>
        <link refid="classNESO_1_1Particles_1_1ParticleLoopBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>NESO::Particles::BufferDevice&lt; INT &gt;</label>
        <link refid="classNESO_1_1Particles_1_1BufferDevice"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>NESO::Particles::GlobalMove</label>
        <link refid="classNESO_1_1Particles_1_1GlobalMove"/>
      </node>
      <node id="3">
        <label>NESO::Particles::EventStack</label>
        <link refid="classNESO_1_1Particles_1_1EventStack"/>
      </node>
      <node id="6">
        <label>NESO::Particles::ParticleSpec</label>
        <link refid="classNESO_1_1Particles_1_1ParticleSpec"/>
      </node>
      <node id="1">
        <label>NESO::Particles::ParticleLoop&lt; KERNEL, ARGS &gt;</label>
        <link refid="classNESO_1_1Particles_1_1ParticleLoop"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>event_stack</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>particle_group_ptr</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>NESO::Particles::BufferBase&lt; T &gt;</label>
        <link refid="classNESO_1_1Particles_1_1BufferBase"/>
      </node>
      <node id="10">
        <label>NESO::Particles::CellMove</label>
        <link refid="classNESO_1_1Particles_1_1CellMove"/>
      </node>
      <node id="2">
        <label>NESO::Particles::ParticleLoopBase</label>
        <link refid="classNESO_1_1Particles_1_1ParticleLoopBase"/>
      </node>
      <node id="4">
        <label>NESO::Particles::ParticleGroup</label>
        <link refid="classNESO_1_1Particles_1_1ParticleGroup"/>
        <childnode refid="5" relation="usage">
          <edgelabel>layer_compressor</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>particle_spec</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>h_npart_cell</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>d_npart_cell</edgelabel>
          <edgelabel>d_remove_cells</edgelabel>
          <edgelabel>d_remove_layers</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>cell_move_ctx</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>global_move_ctx</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>NESO::Particles::BufferHost&lt; INT &gt;</label>
        <link refid="classNESO_1_1Particles_1_1BufferHost"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>NESO::Particles::LayerCompressor</label>
        <link refid="classNESO_1_1Particles_1_1LayerCompressor"/>
      </node>
    </collaborationgraph>
    <location file="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" line="160" column="1" bodyfile="/tmp/repo-checkout/NESO-Particles/include/loop/particle_loop.hpp" bodystart="160" bodyend="526"/>
    <listofallmembers>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a7e8a81752f0d86ab5b35766786f8ace5" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>args</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a18ef2cb0939dc4b1c0f9afbd6a061c97" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>check_is_sym_inner</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1abd226dbcd645b9257c28bb4638df6077" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>check_is_sym_inner</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a630dfdda60d36500f29c7f1a99b7a094" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>check_is_sym_outer</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a840d6d11ac6b6e9f4bd8ba98fd350e73" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>create_global_info</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ae4ddf8ece3a238e60e4261b952968018" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>create_kernel_args</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ac47859677f069af66bd9acc07d020a31" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>create_kernel_args_inner</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1aaedb7159c085ba8308e405aecd4d0ab5" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>create_loop_arg_cast</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a87ebf1c0d8e9ea514adb72a8ffd1e5eb" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>create_loop_arg_cast</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a2618ddf890831d1928fc2c57b6c155a8" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>create_loop_args</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a396ee93063306589a4a78f84c62af10d" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>create_loop_args_inner</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1afde0dff6a749ccc1904b696bb813833f" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>d_npart_cell</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a9cb1a8c5e78b4a7f298e8286a10de571" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>d_npart_cell_es</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a3829bce8eb1919a4fefc6a80b7726751" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>d_npart_cell_es_lb</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a864da819efe2c3446bab87c356340850" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>d_npart_cell_lb</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a96c886a41776bfc01a432b65aec7b874" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>event_stack</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a9dc351b7fdff46aabc878fff6273b36b" prot="public" virt="virtual"><scope>NESO::Particles::ParticleLoop</scope><name>execute</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a0a949f103a84ec6f97d5d906e2fed40f" prot="protected" virt="virtual"><scope>NESO::Particles::ParticleLoop</scope><name>get_loop_type_int</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a279f65c1723b8e89ce14266350a15617" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>h_npart_cell_lb</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a760262c6f13fcbea082781eaa393385e" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>init_from_particle_dat</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a605bdf33672d3d7ba8740e80015552bb" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>iteration_set</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1aa24dc65aef0c890f56842738bed071dc" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>iteration_set_is_empty</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ae6d231d621faffadef90d6d0a73fc335" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>kernel</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ab137330cfc5bfbe29e5e69534acc4906" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>kernel_parameter_type</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a394d431706b7ab567464921ba169de70" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>loop_parameter_type</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a14bfeb8ccbaff434de3fed8f90db002d" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>loop_running</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ad86cdd35d4aa64309282e4ada6a53062" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>loop_type</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ab4d2bd483af6420c076fae16b49725f4" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>name</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ae72d41720714abbb03de36bae3737c6b" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>ncell</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a61f804ea657633f0489e24b38cf87ff0" prot="public" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>operator=</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a70d1c810f40539561459f0bf6c3b602b" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>particle_dat_init</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a6dc1da877237bcf5e3e854edf18d5559" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>particle_group_ptr</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a236bd09ae49b6d073a2dbaf9a2c971f8" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>particle_group_shrptr</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ad70d9b4ae4390982fdda19895f9e7b0f" prot="public" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>ParticleLoop</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a5125330221ebdb289cca155d390794fe" prot="public" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>ParticleLoop</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a44d45028b630e37ed6b4a1cf24cd289c" prot="public" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>ParticleLoop</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a9574749b8965c1ac3aafe64dbb088731" prot="public" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>ParticleLoop</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a810cb2f97dc263415d0198d2fa62d74f" prot="public" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>ParticleLoop</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1aeb6a955f5eed718ee84a7ce11f8de101" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>post_loop_cast</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1aba559c8c9a4a8ed2f668a6ea1e809a6c" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>post_loop_cast</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a410b425ab28a3f808921b0cff4cf8b1d" prot="public" virt="virtual"><scope>NESO::Particles::ParticleLoop</scope><name>submit</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a464f8e606e1ae97dea1369961647db95" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>sycl_target</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1ac3752de720a3e56797d36a444823f8dd" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>unpack_args</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a64f529b5bfe4a8a5b1d902f5c16a8d49" prot="protected" virt="non-virtual"><scope>NESO::Particles::ParticleLoop</scope><name>unpack_args</name></member>
      <member refid="classNESO_1_1Particles_1_1ParticleLoop_1a88ce6aec00dbba8778a34b77a5eaf5f5" prot="public" virt="virtual"><scope>NESO::Particles::ParticleLoop</scope><name>wait</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
