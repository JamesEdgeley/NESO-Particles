<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classNESO_1_1Particles_1_1BufferDevice" kind="class" language="C++" prot="public">
    <compoundname>NESO::Particles::BufferDevice</compoundname>
    <includes refid="compute__target_8hpp" local="no">compute_target.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1BufferDevice_1adde11cb6e995ef533901fb88f4023e50" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref></type>
        <definition>SYCLTargetSharedPtr NESO::Particles::BufferDevice&lt; T &gt;::sycl_target</definition>
        <argsstring></argsstring>
        <name>sycl_target</name>
        <briefdescription>
<para>Compute device used by the instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="303" column="23" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1BufferDevice_1a990baf1bc71137b3112526099491b2de" prot="public" static="no" mutable="no">
        <type>T *</type>
        <definition>T* NESO::Particles::BufferDevice&lt; T &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
<para>SYCL USM device pointer, only accessible on device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="305" column="5" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNESO_1_1Particles_1_1BufferDevice_1a2f6f249e83f71a840ae0aa868015bdb6" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t NESO::Particles::BufferDevice&lt; T &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
<para>Number of elements allocated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="307" column="10" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNESO_1_1Particles_1_1BufferDevice_1ac2ec6b173ed12bc937ac22765e78cdbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::BufferDevice&lt; T &gt;::BufferDevice</definition>
        <argsstring>(const BufferDevice &amp;st)=delete</argsstring>
        <name>BufferDevice</name>
        <param>
          <type>const <ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref> &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
<para>Disable (implicit) copies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="298" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1BufferDevice_1a81b9fc0ea1bcafb95d966194c901e0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref> &amp;</type>
        <definition>BufferDevice&amp; NESO::Particles::BufferDevice&lt; T &gt;::operator=</definition>
        <argsstring>(BufferDevice const &amp;a)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Disable (implicit) copies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="300" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1BufferDevice_1a40ffda943cd98bf20d1582d41d6d61ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::BufferDevice&lt; T &gt;::BufferDevice</definition>
        <argsstring>(SYCLTargetSharedPtr &amp;sycl_target, size_t size)</argsstring>
        <name>BufferDevice</name>
        <param>
          <type><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref> &amp;</type>
          <declname>sycl_target</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref> of a given number of elements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sycl_target</parametername>
</parameternamelist>
<parameterdescription>
<para>SYCLTargetSharedPtr to use as compute device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="315" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="315" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1BufferDevice_1a4dda438c8f32e50b0c5056a9e657506b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::BufferDevice&lt; T &gt;::BufferDevice</definition>
        <argsstring>(SYCLTargetSharedPtr sycl_target, const std::vector&lt; T &gt; &amp;vec)</argsstring>
        <name>BufferDevice</name>
        <param>
          <type><ref refid="namespaceNESO_1_1Particles_1a897f23893a83614b3f78e2f08d7aad71" kindref="member">SYCLTargetSharedPtr</ref></type>
          <declname>sycl_target</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <ref refid="classNESO_1_1Particles_1_1BufferDevice" kindref="compound">BufferDevice</ref> from a std::vector. Note, this does not operate like a sycl::buffer and is a copy of the source vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sycl_target</parametername>
</parameternamelist>
<parameterdescription>
<para>SYCLTargetSharedPtr to use as compute device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector to copy data from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="328" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="328" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1BufferDevice_1a387b72b586e0d123ade5721d5fda9dd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NESO::Particles::BufferDevice&lt; T &gt;::size_bytes</definition>
        <argsstring>()</argsstring>
        <name>size_bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of the allocation in bytes.</para>
<para><simplesect kind="return"><para>size of buffer in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="341" column="17" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="341" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1BufferDevice_1af677dae3fe3a7ebf98339a2b4112e400" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int NESO::Particles::BufferDevice&lt; T &gt;::realloc_no_copy</definition>
        <argsstring>(const size_t size)</argsstring>
        <name>realloc_no_copy</name>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reallocate the buffer to hold at least the requested number of elements. May or may not reduce the buffer size if called with a size less than the current allocation. Current contents is not copied to the new buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of elements this buffer should be able to hold. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="350" column="14" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="350" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classNESO_1_1Particles_1_1BufferDevice_1aa545c4dc9e4f9268692a8ae285510304" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NESO::Particles::BufferDevice&lt; T &gt;::~BufferDevice</definition>
        <argsstring>()</argsstring>
        <name>~BufferDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="358" column="3" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="358" bodyend="362"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Container around USM device allocated memory that can be resized. </para>
    </detaileddescription>
    <location file="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" line="294" column="12" bodyfile="/tmp/repo-checkout/NESO-Particles/include/compute_target.hpp" bodystart="294" bodyend="363"/>
    <listofallmembers>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1ac2ec6b173ed12bc937ac22765e78cdbb" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>BufferDevice</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1a40ffda943cd98bf20d1582d41d6d61ce" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>BufferDevice</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1a4dda438c8f32e50b0c5056a9e657506b" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>BufferDevice</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1a81b9fc0ea1bcafb95d966194c901e0c1" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>operator=</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1a990baf1bc71137b3112526099491b2de" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>ptr</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1af677dae3fe3a7ebf98339a2b4112e400" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>realloc_no_copy</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1a2f6f249e83f71a840ae0aa868015bdb6" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>size</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1a387b72b586e0d123ade5721d5fda9dd3" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>size_bytes</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1adde11cb6e995ef533901fb88f4023e50" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>sycl_target</name></member>
      <member refid="classNESO_1_1Particles_1_1BufferDevice_1aa545c4dc9e4f9268692a8ae285510304" prot="public" virt="non-virtual"><scope>NESO::Particles::BufferDevice</scope><name>~BufferDevice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
